/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: 1.0
Contact: patrick.koss@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// V1InstancesAlertgroupsAlertrulesCreateRequest Alert rule that should be created or updated
type V1InstancesAlertgroupsAlertrulesCreateRequest struct {
	// The name of the alert. Must be unique.
	Alert string `json:"alert"`
	// The PromQL expression to evaluate. Every evaluation cycle this is evaluated at the current time, and all resultant time series become pending/firing alerts.
	Expr string `json:"expr"`
	// Alerts are considered firing once they have been returned for this long. Alerts which have not yet fired for long enough are considered pending.
	For *string `json:"for,omitempty"`
	// map of key:value. Labels to add or overwrite for each alert.
	Labels map[string]interface{} `json:"labels"`
	// map of key:value. Annotations to add to each alert.
	Annotations map[string]interface{} `json:"annotations"`
}

// NewV1InstancesAlertgroupsAlertrulesCreateRequest instantiates a new V1InstancesAlertgroupsAlertrulesCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1InstancesAlertgroupsAlertrulesCreateRequest(alert string, expr string, labels map[string]interface{}, annotations map[string]interface{}) *V1InstancesAlertgroupsAlertrulesCreateRequest {
	this := V1InstancesAlertgroupsAlertrulesCreateRequest{}
	this.Alert = alert
	this.Expr = expr
	var for_ string = "0s"
	this.For = &for_
	this.Labels = labels
	this.Annotations = annotations
	return &this
}

// NewV1InstancesAlertgroupsAlertrulesCreateRequestWithDefaults instantiates a new V1InstancesAlertgroupsAlertrulesCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InstancesAlertgroupsAlertrulesCreateRequestWithDefaults() *V1InstancesAlertgroupsAlertrulesCreateRequest {
	this := V1InstancesAlertgroupsAlertrulesCreateRequest{}
	var for_ string = "0s"
	this.For = &for_
	return &this
}

// GetAlert returns the Alert field value
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) GetAlert() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Alert
}

// GetAlertOk returns a tuple with the Alert field value
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) GetAlertOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alert, true
}

// SetAlert sets field value
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) SetAlert(v string) {
	o.Alert = v
}

// GetExpr returns the Expr field value
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) GetExpr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Expr
}

// GetExprOk returns a tuple with the Expr field value
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) GetExprOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expr, true
}

// SetExpr sets field value
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) SetExpr(v string) {
	o.Expr = v
}

// GetFor returns the For field value if set, zero value otherwise.
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) GetFor() string {
	if o == nil || o.For == nil {
		var ret string
		return ret
	}
	return *o.For
}

// GetForOk returns a tuple with the For field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) GetForOk() (*string, bool) {
	if o == nil || o.For == nil {
		return nil, false
	}
	return o.For, true
}

// HasFor returns a boolean if a field has been set.
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) HasFor() bool {
	if o != nil && o.For != nil {
		return true
	}

	return false
}

// SetFor gets a reference to the given string and assigns it to the For field.
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) SetFor(v string) {
	o.For = &v
}

// GetLabels returns the Labels field value
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) GetLabels() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) GetLabelsOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) SetLabels(v map[string]interface{}) {
	o.Labels = v
}

// GetAnnotations returns the Annotations field value
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) GetAnnotations() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) GetAnnotationsOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Annotations, true
}

// SetAnnotations sets field value
func (o *V1InstancesAlertgroupsAlertrulesCreateRequest) SetAnnotations(v map[string]interface{}) {
	o.Annotations = v
}

func (o V1InstancesAlertgroupsAlertrulesCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["alert"] = o.Alert
	}
	if true {
		toSerialize["expr"] = o.Expr
	}
	if o.For != nil {
		toSerialize["for"] = o.For
	}
	if true {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["annotations"] = o.Annotations
	}
	return json.Marshal(toSerialize)
}

type NullableV1InstancesAlertgroupsAlertrulesCreateRequest struct {
	value *V1InstancesAlertgroupsAlertrulesCreateRequest
	isSet bool
}

func (v NullableV1InstancesAlertgroupsAlertrulesCreateRequest) Get() *V1InstancesAlertgroupsAlertrulesCreateRequest {
	return v.value
}

func (v *NullableV1InstancesAlertgroupsAlertrulesCreateRequest) Set(val *V1InstancesAlertgroupsAlertrulesCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1InstancesAlertgroupsAlertrulesCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1InstancesAlertgroupsAlertrulesCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1InstancesAlertgroupsAlertrulesCreateRequest(val *V1InstancesAlertgroupsAlertrulesCreateRequest) *NullableV1InstancesAlertgroupsAlertrulesCreateRequest {
	return &NullableV1InstancesAlertgroupsAlertrulesCreateRequest{value: val, isSet: true}
}

func (v NullableV1InstancesAlertgroupsAlertrulesCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1InstancesAlertgroupsAlertrulesCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
