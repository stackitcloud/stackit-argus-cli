/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// Job struct for Job
type Job struct {
	JobName string `json:"jobName"`
	Scheme *string `json:"scheme,omitempty"`
	ScrapeInterval string `json:"scrapeInterval"`
	ScrapeTimeout string `json:"scrapeTimeout"`
	MetricsPath *string `json:"metricsPath,omitempty"`
	StaticConfigs []StaticConfigs `json:"staticConfigs"`
	SampleLimit *int32 `json:"sampleLimit,omitempty"`
	BasicAuth *BasicAuth `json:"basicAuth,omitempty"`
	Oauth2 *OAuth2 `json:"oauth2,omitempty"`
	TlsConfig *TLSConfig `json:"tlsConfig,omitempty"`
	BearerToken *string `json:"bearerToken,omitempty"`
	MetricsRelabelConfigs []MetricsRelabelConfig `json:"metricsRelabelConfigs,omitempty"`
	Params *map[string][]string `json:"params,omitempty"`
	HttpSDConfigs []HTTPServiceSD `json:"httpSDConfigs,omitempty"`
	HonorLabels *bool `json:"honorLabels,omitempty"`
	HonorTimeStamps *bool `json:"honorTimeStamps,omitempty"`
}

// NewJob instantiates a new Job object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJob(jobName string, scrapeInterval string, scrapeTimeout string, staticConfigs []StaticConfigs) *Job {
	this := Job{}
	this.JobName = jobName
	var scheme string = "http"
	this.Scheme = &scheme
	this.ScrapeInterval = scrapeInterval
	this.ScrapeTimeout = scrapeTimeout
	var metricsPath string = "/metrics"
	this.MetricsPath = &metricsPath
	this.StaticConfigs = staticConfigs
	var honorLabels bool = false
	this.HonorLabels = &honorLabels
	var honorTimeStamps bool = false
	this.HonorTimeStamps = &honorTimeStamps
	return &this
}

// NewJobWithDefaults instantiates a new Job object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobWithDefaults() *Job {
	this := Job{}
	var scheme string = "http"
	this.Scheme = &scheme
	var metricsPath string = "/metrics"
	this.MetricsPath = &metricsPath
	var honorLabels bool = false
	this.HonorLabels = &honorLabels
	var honorTimeStamps bool = false
	this.HonorTimeStamps = &honorTimeStamps
	return &this
}

// GetJobName returns the JobName field value
func (o *Job) GetJobName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobName
}

// GetJobNameOk returns a tuple with the JobName field value
// and a boolean to check if the value has been set.
func (o *Job) GetJobNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobName, true
}

// SetJobName sets field value
func (o *Job) SetJobName(v string) {
	o.JobName = v
}

// GetScheme returns the Scheme field value if set, zero value otherwise.
func (o *Job) GetScheme() string {
	if o == nil || o.Scheme == nil {
		var ret string
		return ret
	}
	return *o.Scheme
}

// GetSchemeOk returns a tuple with the Scheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetSchemeOk() (*string, bool) {
	if o == nil || o.Scheme == nil {
		return nil, false
	}
	return o.Scheme, true
}

// HasScheme returns a boolean if a field has been set.
func (o *Job) HasScheme() bool {
	if o != nil && o.Scheme != nil {
		return true
	}

	return false
}

// SetScheme gets a reference to the given string and assigns it to the Scheme field.
func (o *Job) SetScheme(v string) {
	o.Scheme = &v
}

// GetScrapeInterval returns the ScrapeInterval field value
func (o *Job) GetScrapeInterval() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScrapeInterval
}

// GetScrapeIntervalOk returns a tuple with the ScrapeInterval field value
// and a boolean to check if the value has been set.
func (o *Job) GetScrapeIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScrapeInterval, true
}

// SetScrapeInterval sets field value
func (o *Job) SetScrapeInterval(v string) {
	o.ScrapeInterval = v
}

// GetScrapeTimeout returns the ScrapeTimeout field value
func (o *Job) GetScrapeTimeout() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScrapeTimeout
}

// GetScrapeTimeoutOk returns a tuple with the ScrapeTimeout field value
// and a boolean to check if the value has been set.
func (o *Job) GetScrapeTimeoutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScrapeTimeout, true
}

// SetScrapeTimeout sets field value
func (o *Job) SetScrapeTimeout(v string) {
	o.ScrapeTimeout = v
}

// GetMetricsPath returns the MetricsPath field value if set, zero value otherwise.
func (o *Job) GetMetricsPath() string {
	if o == nil || o.MetricsPath == nil {
		var ret string
		return ret
	}
	return *o.MetricsPath
}

// GetMetricsPathOk returns a tuple with the MetricsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetMetricsPathOk() (*string, bool) {
	if o == nil || o.MetricsPath == nil {
		return nil, false
	}
	return o.MetricsPath, true
}

// HasMetricsPath returns a boolean if a field has been set.
func (o *Job) HasMetricsPath() bool {
	if o != nil && o.MetricsPath != nil {
		return true
	}

	return false
}

// SetMetricsPath gets a reference to the given string and assigns it to the MetricsPath field.
func (o *Job) SetMetricsPath(v string) {
	o.MetricsPath = &v
}

// GetStaticConfigs returns the StaticConfigs field value
func (o *Job) GetStaticConfigs() []StaticConfigs {
	if o == nil {
		var ret []StaticConfigs
		return ret
	}

	return o.StaticConfigs
}

// GetStaticConfigsOk returns a tuple with the StaticConfigs field value
// and a boolean to check if the value has been set.
func (o *Job) GetStaticConfigsOk() ([]StaticConfigs, bool) {
	if o == nil {
		return nil, false
	}
	return o.StaticConfigs, true
}

// SetStaticConfigs sets field value
func (o *Job) SetStaticConfigs(v []StaticConfigs) {
	o.StaticConfigs = v
}

// GetSampleLimit returns the SampleLimit field value if set, zero value otherwise.
func (o *Job) GetSampleLimit() int32 {
	if o == nil || o.SampleLimit == nil {
		var ret int32
		return ret
	}
	return *o.SampleLimit
}

// GetSampleLimitOk returns a tuple with the SampleLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetSampleLimitOk() (*int32, bool) {
	if o == nil || o.SampleLimit == nil {
		return nil, false
	}
	return o.SampleLimit, true
}

// HasSampleLimit returns a boolean if a field has been set.
func (o *Job) HasSampleLimit() bool {
	if o != nil && o.SampleLimit != nil {
		return true
	}

	return false
}

// SetSampleLimit gets a reference to the given int32 and assigns it to the SampleLimit field.
func (o *Job) SetSampleLimit(v int32) {
	o.SampleLimit = &v
}

// GetBasicAuth returns the BasicAuth field value if set, zero value otherwise.
func (o *Job) GetBasicAuth() BasicAuth {
	if o == nil || o.BasicAuth == nil {
		var ret BasicAuth
		return ret
	}
	return *o.BasicAuth
}

// GetBasicAuthOk returns a tuple with the BasicAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetBasicAuthOk() (*BasicAuth, bool) {
	if o == nil || o.BasicAuth == nil {
		return nil, false
	}
	return o.BasicAuth, true
}

// HasBasicAuth returns a boolean if a field has been set.
func (o *Job) HasBasicAuth() bool {
	if o != nil && o.BasicAuth != nil {
		return true
	}

	return false
}

// SetBasicAuth gets a reference to the given BasicAuth and assigns it to the BasicAuth field.
func (o *Job) SetBasicAuth(v BasicAuth) {
	o.BasicAuth = &v
}

// GetOauth2 returns the Oauth2 field value if set, zero value otherwise.
func (o *Job) GetOauth2() OAuth2 {
	if o == nil || o.Oauth2 == nil {
		var ret OAuth2
		return ret
	}
	return *o.Oauth2
}

// GetOauth2Ok returns a tuple with the Oauth2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetOauth2Ok() (*OAuth2, bool) {
	if o == nil || o.Oauth2 == nil {
		return nil, false
	}
	return o.Oauth2, true
}

// HasOauth2 returns a boolean if a field has been set.
func (o *Job) HasOauth2() bool {
	if o != nil && o.Oauth2 != nil {
		return true
	}

	return false
}

// SetOauth2 gets a reference to the given OAuth2 and assigns it to the Oauth2 field.
func (o *Job) SetOauth2(v OAuth2) {
	o.Oauth2 = &v
}

// GetTlsConfig returns the TlsConfig field value if set, zero value otherwise.
func (o *Job) GetTlsConfig() TLSConfig {
	if o == nil || o.TlsConfig == nil {
		var ret TLSConfig
		return ret
	}
	return *o.TlsConfig
}

// GetTlsConfigOk returns a tuple with the TlsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetTlsConfigOk() (*TLSConfig, bool) {
	if o == nil || o.TlsConfig == nil {
		return nil, false
	}
	return o.TlsConfig, true
}

// HasTlsConfig returns a boolean if a field has been set.
func (o *Job) HasTlsConfig() bool {
	if o != nil && o.TlsConfig != nil {
		return true
	}

	return false
}

// SetTlsConfig gets a reference to the given TLSConfig and assigns it to the TlsConfig field.
func (o *Job) SetTlsConfig(v TLSConfig) {
	o.TlsConfig = &v
}

// GetBearerToken returns the BearerToken field value if set, zero value otherwise.
func (o *Job) GetBearerToken() string {
	if o == nil || o.BearerToken == nil {
		var ret string
		return ret
	}
	return *o.BearerToken
}

// GetBearerTokenOk returns a tuple with the BearerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetBearerTokenOk() (*string, bool) {
	if o == nil || o.BearerToken == nil {
		return nil, false
	}
	return o.BearerToken, true
}

// HasBearerToken returns a boolean if a field has been set.
func (o *Job) HasBearerToken() bool {
	if o != nil && o.BearerToken != nil {
		return true
	}

	return false
}

// SetBearerToken gets a reference to the given string and assigns it to the BearerToken field.
func (o *Job) SetBearerToken(v string) {
	o.BearerToken = &v
}

// GetMetricsRelabelConfigs returns the MetricsRelabelConfigs field value if set, zero value otherwise.
func (o *Job) GetMetricsRelabelConfigs() []MetricsRelabelConfig {
	if o == nil || o.MetricsRelabelConfigs == nil {
		var ret []MetricsRelabelConfig
		return ret
	}
	return o.MetricsRelabelConfigs
}

// GetMetricsRelabelConfigsOk returns a tuple with the MetricsRelabelConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetMetricsRelabelConfigsOk() ([]MetricsRelabelConfig, bool) {
	if o == nil || o.MetricsRelabelConfigs == nil {
		return nil, false
	}
	return o.MetricsRelabelConfigs, true
}

// HasMetricsRelabelConfigs returns a boolean if a field has been set.
func (o *Job) HasMetricsRelabelConfigs() bool {
	if o != nil && o.MetricsRelabelConfigs != nil {
		return true
	}

	return false
}

// SetMetricsRelabelConfigs gets a reference to the given []MetricsRelabelConfig and assigns it to the MetricsRelabelConfigs field.
func (o *Job) SetMetricsRelabelConfigs(v []MetricsRelabelConfig) {
	o.MetricsRelabelConfigs = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *Job) GetParams() map[string][]string {
	if o == nil || o.Params == nil {
		var ret map[string][]string
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetParamsOk() (*map[string][]string, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *Job) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given map[string][]string and assigns it to the Params field.
func (o *Job) SetParams(v map[string][]string) {
	o.Params = &v
}

// GetHttpSDConfigs returns the HttpSDConfigs field value if set, zero value otherwise.
func (o *Job) GetHttpSDConfigs() []HTTPServiceSD {
	if o == nil || o.HttpSDConfigs == nil {
		var ret []HTTPServiceSD
		return ret
	}
	return o.HttpSDConfigs
}

// GetHttpSDConfigsOk returns a tuple with the HttpSDConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetHttpSDConfigsOk() ([]HTTPServiceSD, bool) {
	if o == nil || o.HttpSDConfigs == nil {
		return nil, false
	}
	return o.HttpSDConfigs, true
}

// HasHttpSDConfigs returns a boolean if a field has been set.
func (o *Job) HasHttpSDConfigs() bool {
	if o != nil && o.HttpSDConfigs != nil {
		return true
	}

	return false
}

// SetHttpSDConfigs gets a reference to the given []HTTPServiceSD and assigns it to the HttpSDConfigs field.
func (o *Job) SetHttpSDConfigs(v []HTTPServiceSD) {
	o.HttpSDConfigs = v
}

// GetHonorLabels returns the HonorLabels field value if set, zero value otherwise.
func (o *Job) GetHonorLabels() bool {
	if o == nil || o.HonorLabels == nil {
		var ret bool
		return ret
	}
	return *o.HonorLabels
}

// GetHonorLabelsOk returns a tuple with the HonorLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetHonorLabelsOk() (*bool, bool) {
	if o == nil || o.HonorLabels == nil {
		return nil, false
	}
	return o.HonorLabels, true
}

// HasHonorLabels returns a boolean if a field has been set.
func (o *Job) HasHonorLabels() bool {
	if o != nil && o.HonorLabels != nil {
		return true
	}

	return false
}

// SetHonorLabels gets a reference to the given bool and assigns it to the HonorLabels field.
func (o *Job) SetHonorLabels(v bool) {
	o.HonorLabels = &v
}

// GetHonorTimeStamps returns the HonorTimeStamps field value if set, zero value otherwise.
func (o *Job) GetHonorTimeStamps() bool {
	if o == nil || o.HonorTimeStamps == nil {
		var ret bool
		return ret
	}
	return *o.HonorTimeStamps
}

// GetHonorTimeStampsOk returns a tuple with the HonorTimeStamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetHonorTimeStampsOk() (*bool, bool) {
	if o == nil || o.HonorTimeStamps == nil {
		return nil, false
	}
	return o.HonorTimeStamps, true
}

// HasHonorTimeStamps returns a boolean if a field has been set.
func (o *Job) HasHonorTimeStamps() bool {
	if o != nil && o.HonorTimeStamps != nil {
		return true
	}

	return false
}

// SetHonorTimeStamps gets a reference to the given bool and assigns it to the HonorTimeStamps field.
func (o *Job) SetHonorTimeStamps(v bool) {
	o.HonorTimeStamps = &v
}

func (o Job) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["jobName"] = o.JobName
	}
	if o.Scheme != nil {
		toSerialize["scheme"] = o.Scheme
	}
	if true {
		toSerialize["scrapeInterval"] = o.ScrapeInterval
	}
	if true {
		toSerialize["scrapeTimeout"] = o.ScrapeTimeout
	}
	if o.MetricsPath != nil {
		toSerialize["metricsPath"] = o.MetricsPath
	}
	if true {
		toSerialize["staticConfigs"] = o.StaticConfigs
	}
	if o.SampleLimit != nil {
		toSerialize["sampleLimit"] = o.SampleLimit
	}
	if o.BasicAuth != nil {
		toSerialize["basicAuth"] = o.BasicAuth
	}
	if o.Oauth2 != nil {
		toSerialize["oauth2"] = o.Oauth2
	}
	if o.TlsConfig != nil {
		toSerialize["tlsConfig"] = o.TlsConfig
	}
	if o.BearerToken != nil {
		toSerialize["bearerToken"] = o.BearerToken
	}
	if o.MetricsRelabelConfigs != nil {
		toSerialize["metricsRelabelConfigs"] = o.MetricsRelabelConfigs
	}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	if o.HttpSDConfigs != nil {
		toSerialize["httpSDConfigs"] = o.HttpSDConfigs
	}
	if o.HonorLabels != nil {
		toSerialize["honorLabels"] = o.HonorLabels
	}
	if o.HonorTimeStamps != nil {
		toSerialize["honorTimeStamps"] = o.HonorTimeStamps
	}
	return json.Marshal(toSerialize)
}

type NullableJob struct {
	value *Job
	isSet bool
}

func (v NullableJob) Get() *Job {
	return v.value
}

func (v *NullableJob) Set(val *Job) {
	v.value = val
	v.isSet = true
}

func (v NullableJob) IsSet() bool {
	return v.isSet
}

func (v *NullableJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJob(val *Job) *NullableJob {
	return &NullableJob{value: val, isSet: true}
}

func (v NullableJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


