/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// V1InstancesAlertgroupsRecordsUpdateRequest Record. `Additional Validators:` * total config (all alert groups/rules/records) should not be bigger than 500000 characters as string since this the limitation of prometheus.
type V1InstancesAlertgroupsRecordsUpdateRequest struct {
	// The PromQL expression to evaluate. Every evaluation cycle this is evaluated at the current time, and all resultant time series become pending/firing alerts.
	Expr string `json:"expr"`
	// map of key:value. Labels to add or overwrite for each alert. `Additional Validators:` * should not contain more than 5 keys * each key and value should not be longer than 200 characters 
	Labels map[string]interface{} `json:"labels,omitempty"`
}

// NewV1InstancesAlertgroupsRecordsUpdateRequest instantiates a new V1InstancesAlertgroupsRecordsUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1InstancesAlertgroupsRecordsUpdateRequest(expr string) *V1InstancesAlertgroupsRecordsUpdateRequest {
	this := V1InstancesAlertgroupsRecordsUpdateRequest{}
	this.Expr = expr
	return &this
}

// NewV1InstancesAlertgroupsRecordsUpdateRequestWithDefaults instantiates a new V1InstancesAlertgroupsRecordsUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InstancesAlertgroupsRecordsUpdateRequestWithDefaults() *V1InstancesAlertgroupsRecordsUpdateRequest {
	this := V1InstancesAlertgroupsRecordsUpdateRequest{}
	return &this
}

// GetExpr returns the Expr field value
func (o *V1InstancesAlertgroupsRecordsUpdateRequest) GetExpr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Expr
}

// GetExprOk returns a tuple with the Expr field value
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertgroupsRecordsUpdateRequest) GetExprOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expr, true
}

// SetExpr sets field value
func (o *V1InstancesAlertgroupsRecordsUpdateRequest) SetExpr(v string) {
	o.Expr = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *V1InstancesAlertgroupsRecordsUpdateRequest) GetLabels() map[string]interface{} {
	if o == nil || o.Labels == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertgroupsRecordsUpdateRequest) GetLabelsOk() (map[string]interface{}, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *V1InstancesAlertgroupsRecordsUpdateRequest) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *V1InstancesAlertgroupsRecordsUpdateRequest) SetLabels(v map[string]interface{}) {
	o.Labels = v
}

func (o V1InstancesAlertgroupsRecordsUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["expr"] = o.Expr
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	return json.Marshal(toSerialize)
}

type NullableV1InstancesAlertgroupsRecordsUpdateRequest struct {
	value *V1InstancesAlertgroupsRecordsUpdateRequest
	isSet bool
}

func (v NullableV1InstancesAlertgroupsRecordsUpdateRequest) Get() *V1InstancesAlertgroupsRecordsUpdateRequest {
	return v.value
}

func (v *NullableV1InstancesAlertgroupsRecordsUpdateRequest) Set(val *V1InstancesAlertgroupsRecordsUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1InstancesAlertgroupsRecordsUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1InstancesAlertgroupsRecordsUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1InstancesAlertgroupsRecordsUpdateRequest(val *V1InstancesAlertgroupsRecordsUpdateRequest) *NullableV1InstancesAlertgroupsRecordsUpdateRequest {
	return &NullableV1InstancesAlertgroupsRecordsUpdateRequest{value: val, isSet: true}
}

func (v NullableV1InstancesAlertgroupsRecordsUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1InstancesAlertgroupsRecordsUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


