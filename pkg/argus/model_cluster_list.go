/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// ClusterList struct for ClusterList
type ClusterList struct {
	Message string `json:"message"`
	Clusters []string `json:"clusters"`
}

// NewClusterList instantiates a new ClusterList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterList(message string, clusters []string) *ClusterList {
	this := ClusterList{}
	this.Message = message
	this.Clusters = clusters
	return &this
}

// NewClusterListWithDefaults instantiates a new ClusterList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterListWithDefaults() *ClusterList {
	this := ClusterList{}
	return &this
}

// GetMessage returns the Message field value
func (o *ClusterList) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ClusterList) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ClusterList) SetMessage(v string) {
	o.Message = v
}

// GetClusters returns the Clusters field value
func (o *ClusterList) GetClusters() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Clusters
}

// GetClustersOk returns a tuple with the Clusters field value
// and a boolean to check if the value has been set.
func (o *ClusterList) GetClustersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Clusters, true
}

// SetClusters sets field value
func (o *ClusterList) SetClusters(v []string) {
	o.Clusters = v
}

func (o ClusterList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["clusters"] = o.Clusters
	}
	return json.Marshal(toSerialize)
}

type NullableClusterList struct {
	value *ClusterList
	isSet bool
}

func (v NullableClusterList) Get() *ClusterList {
	return v.value
}

func (v *NullableClusterList) Set(val *ClusterList) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterList) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterList(val *ClusterList) *NullableClusterList {
	return &NullableClusterList{value: val, isSet: true}
}

func (v NullableClusterList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


