/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// V1InstancesBackupSchedulesCreateRequest struct for V1InstancesBackupSchedulesCreateRequest
type V1InstancesBackupSchedulesCreateRequest struct {
	// The schedule for how often to create a backup. `Additional Validators:` * must be a valid cronjob format * must run less than hourly
	Schedule string `json:"schedule"`
}

// NewV1InstancesBackupSchedulesCreateRequest instantiates a new V1InstancesBackupSchedulesCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1InstancesBackupSchedulesCreateRequest(schedule string) *V1InstancesBackupSchedulesCreateRequest {
	this := V1InstancesBackupSchedulesCreateRequest{}
	this.Schedule = schedule
	return &this
}

// NewV1InstancesBackupSchedulesCreateRequestWithDefaults instantiates a new V1InstancesBackupSchedulesCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InstancesBackupSchedulesCreateRequestWithDefaults() *V1InstancesBackupSchedulesCreateRequest {
	this := V1InstancesBackupSchedulesCreateRequest{}
	return &this
}

// GetSchedule returns the Schedule field value
func (o *V1InstancesBackupSchedulesCreateRequest) GetSchedule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *V1InstancesBackupSchedulesCreateRequest) GetScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *V1InstancesBackupSchedulesCreateRequest) SetSchedule(v string) {
	o.Schedule = v
}

func (o V1InstancesBackupSchedulesCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schedule"] = o.Schedule
	}
	return json.Marshal(toSerialize)
}

type NullableV1InstancesBackupSchedulesCreateRequest struct {
	value *V1InstancesBackupSchedulesCreateRequest
	isSet bool
}

func (v NullableV1InstancesBackupSchedulesCreateRequest) Get() *V1InstancesBackupSchedulesCreateRequest {
	return v.value
}

func (v *NullableV1InstancesBackupSchedulesCreateRequest) Set(val *V1InstancesBackupSchedulesCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1InstancesBackupSchedulesCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1InstancesBackupSchedulesCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1InstancesBackupSchedulesCreateRequest(val *V1InstancesBackupSchedulesCreateRequest) *NullableV1InstancesBackupSchedulesCreateRequest {
	return &NullableV1InstancesBackupSchedulesCreateRequest{value: val, isSet: true}
}

func (v NullableV1InstancesBackupSchedulesCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1InstancesBackupSchedulesCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


