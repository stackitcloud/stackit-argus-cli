/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// SystemInstance struct for SystemInstance
type SystemInstance struct {
	Instance string `json:"instance"`
	Name *string `json:"name,omitempty"`
	MetricsUrl string `json:"metricsUrl"`
	TargetsUrl string `json:"targetsUrl"`
	AlertingUrl string `json:"alertingUrl"`
	PushMetricsUrl string `json:"pushMetricsUrl"`
	LogsUrl string `json:"logsUrl"`
	LogsPushUrl string `json:"logsPushUrl"`
	JaegerTracesUrl string `json:"jaegerTracesUrl"`
	OtlpTracesUrl string `json:"otlpTracesUrl"`
	ZipkinSpansUrl string `json:"zipkinSpansUrl"`
	JaegerUiUrl string `json:"jaegerUiUrl"`
}

// NewSystemInstance instantiates a new SystemInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemInstance(instance string, metricsUrl string, targetsUrl string, alertingUrl string, pushMetricsUrl string, logsUrl string, logsPushUrl string, jaegerTracesUrl string, otlpTracesUrl string, zipkinSpansUrl string, jaegerUiUrl string) *SystemInstance {
	this := SystemInstance{}
	this.Instance = instance
	var name string = ""
	this.Name = &name
	this.MetricsUrl = metricsUrl
	this.TargetsUrl = targetsUrl
	this.AlertingUrl = alertingUrl
	this.PushMetricsUrl = pushMetricsUrl
	this.LogsUrl = logsUrl
	this.LogsPushUrl = logsPushUrl
	this.JaegerTracesUrl = jaegerTracesUrl
	this.OtlpTracesUrl = otlpTracesUrl
	this.ZipkinSpansUrl = zipkinSpansUrl
	this.JaegerUiUrl = jaegerUiUrl
	return &this
}

// NewSystemInstanceWithDefaults instantiates a new SystemInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemInstanceWithDefaults() *SystemInstance {
	this := SystemInstance{}
	var name string = ""
	this.Name = &name
	return &this
}

// GetInstance returns the Instance field value
func (o *SystemInstance) GetInstance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetInstanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instance, true
}

// SetInstance sets field value
func (o *SystemInstance) SetInstance(v string) {
	o.Instance = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SystemInstance) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SystemInstance) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SystemInstance) SetName(v string) {
	o.Name = &v
}

// GetMetricsUrl returns the MetricsUrl field value
func (o *SystemInstance) GetMetricsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricsUrl
}

// GetMetricsUrlOk returns a tuple with the MetricsUrl field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetMetricsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricsUrl, true
}

// SetMetricsUrl sets field value
func (o *SystemInstance) SetMetricsUrl(v string) {
	o.MetricsUrl = v
}

// GetTargetsUrl returns the TargetsUrl field value
func (o *SystemInstance) GetTargetsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetsUrl
}

// GetTargetsUrlOk returns a tuple with the TargetsUrl field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetTargetsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetsUrl, true
}

// SetTargetsUrl sets field value
func (o *SystemInstance) SetTargetsUrl(v string) {
	o.TargetsUrl = v
}

// GetAlertingUrl returns the AlertingUrl field value
func (o *SystemInstance) GetAlertingUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertingUrl
}

// GetAlertingUrlOk returns a tuple with the AlertingUrl field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetAlertingUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertingUrl, true
}

// SetAlertingUrl sets field value
func (o *SystemInstance) SetAlertingUrl(v string) {
	o.AlertingUrl = v
}

// GetPushMetricsUrl returns the PushMetricsUrl field value
func (o *SystemInstance) GetPushMetricsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PushMetricsUrl
}

// GetPushMetricsUrlOk returns a tuple with the PushMetricsUrl field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetPushMetricsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PushMetricsUrl, true
}

// SetPushMetricsUrl sets field value
func (o *SystemInstance) SetPushMetricsUrl(v string) {
	o.PushMetricsUrl = v
}

// GetLogsUrl returns the LogsUrl field value
func (o *SystemInstance) GetLogsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LogsUrl
}

// GetLogsUrlOk returns a tuple with the LogsUrl field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetLogsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogsUrl, true
}

// SetLogsUrl sets field value
func (o *SystemInstance) SetLogsUrl(v string) {
	o.LogsUrl = v
}

// GetLogsPushUrl returns the LogsPushUrl field value
func (o *SystemInstance) GetLogsPushUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LogsPushUrl
}

// GetLogsPushUrlOk returns a tuple with the LogsPushUrl field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetLogsPushUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogsPushUrl, true
}

// SetLogsPushUrl sets field value
func (o *SystemInstance) SetLogsPushUrl(v string) {
	o.LogsPushUrl = v
}

// GetJaegerTracesUrl returns the JaegerTracesUrl field value
func (o *SystemInstance) GetJaegerTracesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JaegerTracesUrl
}

// GetJaegerTracesUrlOk returns a tuple with the JaegerTracesUrl field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetJaegerTracesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JaegerTracesUrl, true
}

// SetJaegerTracesUrl sets field value
func (o *SystemInstance) SetJaegerTracesUrl(v string) {
	o.JaegerTracesUrl = v
}

// GetOtlpTracesUrl returns the OtlpTracesUrl field value
func (o *SystemInstance) GetOtlpTracesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OtlpTracesUrl
}

// GetOtlpTracesUrlOk returns a tuple with the OtlpTracesUrl field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetOtlpTracesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OtlpTracesUrl, true
}

// SetOtlpTracesUrl sets field value
func (o *SystemInstance) SetOtlpTracesUrl(v string) {
	o.OtlpTracesUrl = v
}

// GetZipkinSpansUrl returns the ZipkinSpansUrl field value
func (o *SystemInstance) GetZipkinSpansUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZipkinSpansUrl
}

// GetZipkinSpansUrlOk returns a tuple with the ZipkinSpansUrl field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetZipkinSpansUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZipkinSpansUrl, true
}

// SetZipkinSpansUrl sets field value
func (o *SystemInstance) SetZipkinSpansUrl(v string) {
	o.ZipkinSpansUrl = v
}

// GetJaegerUiUrl returns the JaegerUiUrl field value
func (o *SystemInstance) GetJaegerUiUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JaegerUiUrl
}

// GetJaegerUiUrlOk returns a tuple with the JaegerUiUrl field value
// and a boolean to check if the value has been set.
func (o *SystemInstance) GetJaegerUiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JaegerUiUrl, true
}

// SetJaegerUiUrl sets field value
func (o *SystemInstance) SetJaegerUiUrl(v string) {
	o.JaegerUiUrl = v
}

func (o SystemInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["instance"] = o.Instance
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["metricsUrl"] = o.MetricsUrl
	}
	if true {
		toSerialize["targetsUrl"] = o.TargetsUrl
	}
	if true {
		toSerialize["alertingUrl"] = o.AlertingUrl
	}
	if true {
		toSerialize["pushMetricsUrl"] = o.PushMetricsUrl
	}
	if true {
		toSerialize["logsUrl"] = o.LogsUrl
	}
	if true {
		toSerialize["logsPushUrl"] = o.LogsPushUrl
	}
	if true {
		toSerialize["jaegerTracesUrl"] = o.JaegerTracesUrl
	}
	if true {
		toSerialize["otlpTracesUrl"] = o.OtlpTracesUrl
	}
	if true {
		toSerialize["zipkinSpansUrl"] = o.ZipkinSpansUrl
	}
	if true {
		toSerialize["jaegerUiUrl"] = o.JaegerUiUrl
	}
	return json.Marshal(toSerialize)
}

type NullableSystemInstance struct {
	value *SystemInstance
	isSet bool
}

func (v NullableSystemInstance) Get() *SystemInstance {
	return v.value
}

func (v *NullableSystemInstance) Set(val *SystemInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemInstance(val *SystemInstance) *NullableSystemInstance {
	return &NullableSystemInstance{value: val, isSet: true}
}

func (v NullableSystemInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


