/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// V1InstancesAlertconfigsUpdateRequest Alert config
type V1InstancesAlertconfigsUpdateRequest struct {
	Global *V1InstancesAlertconfigsUpdateRequestGlobal `json:"global,omitempty"`
	Route V1InstancesAlertconfigsUpdateRequestRoute `json:"route"`
	// A list of notification receivers.
	Receivers []V1InstancesAlertconfigsUpdateRequestReceiversInner `json:"receivers"`
	InhibitRules *V1InstancesAlertconfigsUpdateRequestInhibitRules `json:"inhibitRules,omitempty"`
}

// NewV1InstancesAlertconfigsUpdateRequest instantiates a new V1InstancesAlertconfigsUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1InstancesAlertconfigsUpdateRequest(route V1InstancesAlertconfigsUpdateRequestRoute, receivers []V1InstancesAlertconfigsUpdateRequestReceiversInner) *V1InstancesAlertconfigsUpdateRequest {
	this := V1InstancesAlertconfigsUpdateRequest{}
	this.Route = route
	this.Receivers = receivers
	return &this
}

// NewV1InstancesAlertconfigsUpdateRequestWithDefaults instantiates a new V1InstancesAlertconfigsUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InstancesAlertconfigsUpdateRequestWithDefaults() *V1InstancesAlertconfigsUpdateRequest {
	this := V1InstancesAlertconfigsUpdateRequest{}
	return &this
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *V1InstancesAlertconfigsUpdateRequest) GetGlobal() V1InstancesAlertconfigsUpdateRequestGlobal {
	if o == nil || o.Global == nil {
		var ret V1InstancesAlertconfigsUpdateRequestGlobal
		return ret
	}
	return *o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequest) GetGlobalOk() (*V1InstancesAlertconfigsUpdateRequestGlobal, bool) {
	if o == nil || o.Global == nil {
		return nil, false
	}
	return o.Global, true
}

// HasGlobal returns a boolean if a field has been set.
func (o *V1InstancesAlertconfigsUpdateRequest) HasGlobal() bool {
	if o != nil && o.Global != nil {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given V1InstancesAlertconfigsUpdateRequestGlobal and assigns it to the Global field.
func (o *V1InstancesAlertconfigsUpdateRequest) SetGlobal(v V1InstancesAlertconfigsUpdateRequestGlobal) {
	o.Global = &v
}

// GetRoute returns the Route field value
func (o *V1InstancesAlertconfigsUpdateRequest) GetRoute() V1InstancesAlertconfigsUpdateRequestRoute {
	if o == nil {
		var ret V1InstancesAlertconfigsUpdateRequestRoute
		return ret
	}

	return o.Route
}

// GetRouteOk returns a tuple with the Route field value
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequest) GetRouteOk() (*V1InstancesAlertconfigsUpdateRequestRoute, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Route, true
}

// SetRoute sets field value
func (o *V1InstancesAlertconfigsUpdateRequest) SetRoute(v V1InstancesAlertconfigsUpdateRequestRoute) {
	o.Route = v
}

// GetReceivers returns the Receivers field value
func (o *V1InstancesAlertconfigsUpdateRequest) GetReceivers() []V1InstancesAlertconfigsUpdateRequestReceiversInner {
	if o == nil {
		var ret []V1InstancesAlertconfigsUpdateRequestReceiversInner
		return ret
	}

	return o.Receivers
}

// GetReceiversOk returns a tuple with the Receivers field value
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequest) GetReceiversOk() ([]V1InstancesAlertconfigsUpdateRequestReceiversInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Receivers, true
}

// SetReceivers sets field value
func (o *V1InstancesAlertconfigsUpdateRequest) SetReceivers(v []V1InstancesAlertconfigsUpdateRequestReceiversInner) {
	o.Receivers = v
}

// GetInhibitRules returns the InhibitRules field value if set, zero value otherwise.
func (o *V1InstancesAlertconfigsUpdateRequest) GetInhibitRules() V1InstancesAlertconfigsUpdateRequestInhibitRules {
	if o == nil || o.InhibitRules == nil {
		var ret V1InstancesAlertconfigsUpdateRequestInhibitRules
		return ret
	}
	return *o.InhibitRules
}

// GetInhibitRulesOk returns a tuple with the InhibitRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequest) GetInhibitRulesOk() (*V1InstancesAlertconfigsUpdateRequestInhibitRules, bool) {
	if o == nil || o.InhibitRules == nil {
		return nil, false
	}
	return o.InhibitRules, true
}

// HasInhibitRules returns a boolean if a field has been set.
func (o *V1InstancesAlertconfigsUpdateRequest) HasInhibitRules() bool {
	if o != nil && o.InhibitRules != nil {
		return true
	}

	return false
}

// SetInhibitRules gets a reference to the given V1InstancesAlertconfigsUpdateRequestInhibitRules and assigns it to the InhibitRules field.
func (o *V1InstancesAlertconfigsUpdateRequest) SetInhibitRules(v V1InstancesAlertconfigsUpdateRequestInhibitRules) {
	o.InhibitRules = &v
}

func (o V1InstancesAlertconfigsUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Global != nil {
		toSerialize["global"] = o.Global
	}
	if true {
		toSerialize["route"] = o.Route
	}
	if true {
		toSerialize["receivers"] = o.Receivers
	}
	if o.InhibitRules != nil {
		toSerialize["inhibitRules"] = o.InhibitRules
	}
	return json.Marshal(toSerialize)
}

type NullableV1InstancesAlertconfigsUpdateRequest struct {
	value *V1InstancesAlertconfigsUpdateRequest
	isSet bool
}

func (v NullableV1InstancesAlertconfigsUpdateRequest) Get() *V1InstancesAlertconfigsUpdateRequest {
	return v.value
}

func (v *NullableV1InstancesAlertconfigsUpdateRequest) Set(val *V1InstancesAlertconfigsUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1InstancesAlertconfigsUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1InstancesAlertconfigsUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1InstancesAlertconfigsUpdateRequest(val *V1InstancesAlertconfigsUpdateRequest) *NullableV1InstancesAlertconfigsUpdateRequest {
	return &NullableV1InstancesAlertconfigsUpdateRequest{value: val, isSet: true}
}

func (v NullableV1InstancesAlertconfigsUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1InstancesAlertconfigsUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


