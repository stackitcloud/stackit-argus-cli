/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// AlertRecordsResponse struct for AlertRecordsResponse
type AlertRecordsResponse struct {
	Message string `json:"message"`
	Data []AlertRecord `json:"data"`
}

// NewAlertRecordsResponse instantiates a new AlertRecordsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRecordsResponse(message string, data []AlertRecord) *AlertRecordsResponse {
	this := AlertRecordsResponse{}
	this.Message = message
	this.Data = data
	return &this
}

// NewAlertRecordsResponseWithDefaults instantiates a new AlertRecordsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRecordsResponseWithDefaults() *AlertRecordsResponse {
	this := AlertRecordsResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *AlertRecordsResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *AlertRecordsResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *AlertRecordsResponse) SetMessage(v string) {
	o.Message = v
}

// GetData returns the Data field value
func (o *AlertRecordsResponse) GetData() []AlertRecord {
	if o == nil {
		var ret []AlertRecord
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AlertRecordsResponse) GetDataOk() ([]AlertRecord, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *AlertRecordsResponse) SetData(v []AlertRecord) {
	o.Data = v
}

func (o AlertRecordsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableAlertRecordsResponse struct {
	value *AlertRecordsResponse
	isSet bool
}

func (v NullableAlertRecordsResponse) Get() *AlertRecordsResponse {
	return v.value
}

func (v *NullableAlertRecordsResponse) Set(val *AlertRecordsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRecordsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRecordsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRecordsResponse(val *AlertRecordsResponse) *NullableAlertRecordsResponse {
	return &NullableAlertRecordsResponse{value: val, isSet: true}
}

func (v NullableAlertRecordsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRecordsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


