/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// GrafanaOauth struct for GrafanaOauth
type GrafanaOauth struct {
	Enabled bool `json:"enabled"`
	ApiUrl string `json:"apiUrl"`
	AuthUrl string `json:"authUrl"`
	Scopes *string `json:"scopes,omitempty"`
	TokenUrl string `json:"tokenUrl"`
	OauthClientId string `json:"oauthClientId"`
	OauthClientSecret string `json:"oauthClientSecret"`
	RoleAttributeStrict *bool `json:"roleAttributeStrict,omitempty"`
	RoleAttributePath string `json:"roleAttributePath"`
}

// NewGrafanaOauth instantiates a new GrafanaOauth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrafanaOauth(enabled bool, apiUrl string, authUrl string, tokenUrl string, oauthClientId string, oauthClientSecret string, roleAttributePath string) *GrafanaOauth {
	this := GrafanaOauth{}
	this.Enabled = enabled
	this.ApiUrl = apiUrl
	this.AuthUrl = authUrl
	var scopes string = "openid profile email"
	this.Scopes = &scopes
	this.TokenUrl = tokenUrl
	this.OauthClientId = oauthClientId
	this.OauthClientSecret = oauthClientSecret
	var roleAttributeStrict bool = true
	this.RoleAttributeStrict = &roleAttributeStrict
	this.RoleAttributePath = roleAttributePath
	return &this
}

// NewGrafanaOauthWithDefaults instantiates a new GrafanaOauth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrafanaOauthWithDefaults() *GrafanaOauth {
	this := GrafanaOauth{}
	var scopes string = "openid profile email"
	this.Scopes = &scopes
	var roleAttributeStrict bool = true
	this.RoleAttributeStrict = &roleAttributeStrict
	return &this
}

// GetEnabled returns the Enabled field value
func (o *GrafanaOauth) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *GrafanaOauth) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *GrafanaOauth) SetEnabled(v bool) {
	o.Enabled = v
}

// GetApiUrl returns the ApiUrl field value
func (o *GrafanaOauth) GetApiUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value
// and a boolean to check if the value has been set.
func (o *GrafanaOauth) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiUrl, true
}

// SetApiUrl sets field value
func (o *GrafanaOauth) SetApiUrl(v string) {
	o.ApiUrl = v
}

// GetAuthUrl returns the AuthUrl field value
func (o *GrafanaOauth) GetAuthUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthUrl
}

// GetAuthUrlOk returns a tuple with the AuthUrl field value
// and a boolean to check if the value has been set.
func (o *GrafanaOauth) GetAuthUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthUrl, true
}

// SetAuthUrl sets field value
func (o *GrafanaOauth) SetAuthUrl(v string) {
	o.AuthUrl = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *GrafanaOauth) GetScopes() string {
	if o == nil || o.Scopes == nil {
		var ret string
		return ret
	}
	return *o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrafanaOauth) GetScopesOk() (*string, bool) {
	if o == nil || o.Scopes == nil {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *GrafanaOauth) HasScopes() bool {
	if o != nil && o.Scopes != nil {
		return true
	}

	return false
}

// SetScopes gets a reference to the given string and assigns it to the Scopes field.
func (o *GrafanaOauth) SetScopes(v string) {
	o.Scopes = &v
}

// GetTokenUrl returns the TokenUrl field value
func (o *GrafanaOauth) GetTokenUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenUrl
}

// GetTokenUrlOk returns a tuple with the TokenUrl field value
// and a boolean to check if the value has been set.
func (o *GrafanaOauth) GetTokenUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenUrl, true
}

// SetTokenUrl sets field value
func (o *GrafanaOauth) SetTokenUrl(v string) {
	o.TokenUrl = v
}

// GetOauthClientId returns the OauthClientId field value
func (o *GrafanaOauth) GetOauthClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OauthClientId
}

// GetOauthClientIdOk returns a tuple with the OauthClientId field value
// and a boolean to check if the value has been set.
func (o *GrafanaOauth) GetOauthClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OauthClientId, true
}

// SetOauthClientId sets field value
func (o *GrafanaOauth) SetOauthClientId(v string) {
	o.OauthClientId = v
}

// GetOauthClientSecret returns the OauthClientSecret field value
func (o *GrafanaOauth) GetOauthClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OauthClientSecret
}

// GetOauthClientSecretOk returns a tuple with the OauthClientSecret field value
// and a boolean to check if the value has been set.
func (o *GrafanaOauth) GetOauthClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OauthClientSecret, true
}

// SetOauthClientSecret sets field value
func (o *GrafanaOauth) SetOauthClientSecret(v string) {
	o.OauthClientSecret = v
}

// GetRoleAttributeStrict returns the RoleAttributeStrict field value if set, zero value otherwise.
func (o *GrafanaOauth) GetRoleAttributeStrict() bool {
	if o == nil || o.RoleAttributeStrict == nil {
		var ret bool
		return ret
	}
	return *o.RoleAttributeStrict
}

// GetRoleAttributeStrictOk returns a tuple with the RoleAttributeStrict field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrafanaOauth) GetRoleAttributeStrictOk() (*bool, bool) {
	if o == nil || o.RoleAttributeStrict == nil {
		return nil, false
	}
	return o.RoleAttributeStrict, true
}

// HasRoleAttributeStrict returns a boolean if a field has been set.
func (o *GrafanaOauth) HasRoleAttributeStrict() bool {
	if o != nil && o.RoleAttributeStrict != nil {
		return true
	}

	return false
}

// SetRoleAttributeStrict gets a reference to the given bool and assigns it to the RoleAttributeStrict field.
func (o *GrafanaOauth) SetRoleAttributeStrict(v bool) {
	o.RoleAttributeStrict = &v
}

// GetRoleAttributePath returns the RoleAttributePath field value
func (o *GrafanaOauth) GetRoleAttributePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleAttributePath
}

// GetRoleAttributePathOk returns a tuple with the RoleAttributePath field value
// and a boolean to check if the value has been set.
func (o *GrafanaOauth) GetRoleAttributePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleAttributePath, true
}

// SetRoleAttributePath sets field value
func (o *GrafanaOauth) SetRoleAttributePath(v string) {
	o.RoleAttributePath = v
}

func (o GrafanaOauth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["apiUrl"] = o.ApiUrl
	}
	if true {
		toSerialize["authUrl"] = o.AuthUrl
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	if true {
		toSerialize["tokenUrl"] = o.TokenUrl
	}
	if true {
		toSerialize["oauthClientId"] = o.OauthClientId
	}
	if true {
		toSerialize["oauthClientSecret"] = o.OauthClientSecret
	}
	if o.RoleAttributeStrict != nil {
		toSerialize["roleAttributeStrict"] = o.RoleAttributeStrict
	}
	if true {
		toSerialize["roleAttributePath"] = o.RoleAttributePath
	}
	return json.Marshal(toSerialize)
}

type NullableGrafanaOauth struct {
	value *GrafanaOauth
	isSet bool
}

func (v NullableGrafanaOauth) Get() *GrafanaOauth {
	return v.value
}

func (v *NullableGrafanaOauth) Set(val *GrafanaOauth) {
	v.value = val
	v.isSet = true
}

func (v NullableGrafanaOauth) IsSet() bool {
	return v.isSet
}

func (v *NullableGrafanaOauth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrafanaOauth(val *GrafanaOauth) *NullableGrafanaOauth {
	return &NullableGrafanaOauth{value: val, isSet: true}
}

func (v NullableGrafanaOauth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrafanaOauth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


