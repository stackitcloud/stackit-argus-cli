/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner struct for V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner
type V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner struct {
	// URL from which the targets are fetched.
	Url string `json:"url"`
	// Refresh interval to re-query the endpoint. E.g. 60s `Additional Validators:` * must be a valid time format* must be >= 60s
	RefreshInterval *string `json:"refreshInterval,omitempty"`
	BasicAuth *V1InstancesScrapeconfigsCreateRequestBasicAuth `json:"basicAuth,omitempty"`
	TlsConfig *V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig `json:"tlsConfig,omitempty"`
	Oauth2 *V1InstancesScrapeconfigsCreateRequestOauth2 `json:"oauth2,omitempty"`
}

// NewV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner instantiates a new V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner(url string) *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner {
	this := V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner{}
	this.Url = url
	var refreshInterval string = "60s"
	this.RefreshInterval = &refreshInterval
	return &this
}

// NewV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInnerWithDefaults instantiates a new V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInnerWithDefaults() *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner {
	this := V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner{}
	var refreshInterval string = "60s"
	this.RefreshInterval = &refreshInterval
	return &this
}

// GetUrl returns the Url field value
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) SetUrl(v string) {
	o.Url = v
}

// GetRefreshInterval returns the RefreshInterval field value if set, zero value otherwise.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) GetRefreshInterval() string {
	if o == nil || o.RefreshInterval == nil {
		var ret string
		return ret
	}
	return *o.RefreshInterval
}

// GetRefreshIntervalOk returns a tuple with the RefreshInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) GetRefreshIntervalOk() (*string, bool) {
	if o == nil || o.RefreshInterval == nil {
		return nil, false
	}
	return o.RefreshInterval, true
}

// HasRefreshInterval returns a boolean if a field has been set.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) HasRefreshInterval() bool {
	if o != nil && o.RefreshInterval != nil {
		return true
	}

	return false
}

// SetRefreshInterval gets a reference to the given string and assigns it to the RefreshInterval field.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) SetRefreshInterval(v string) {
	o.RefreshInterval = &v
}

// GetBasicAuth returns the BasicAuth field value if set, zero value otherwise.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) GetBasicAuth() V1InstancesScrapeconfigsCreateRequestBasicAuth {
	if o == nil || o.BasicAuth == nil {
		var ret V1InstancesScrapeconfigsCreateRequestBasicAuth
		return ret
	}
	return *o.BasicAuth
}

// GetBasicAuthOk returns a tuple with the BasicAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) GetBasicAuthOk() (*V1InstancesScrapeconfigsCreateRequestBasicAuth, bool) {
	if o == nil || o.BasicAuth == nil {
		return nil, false
	}
	return o.BasicAuth, true
}

// HasBasicAuth returns a boolean if a field has been set.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) HasBasicAuth() bool {
	if o != nil && o.BasicAuth != nil {
		return true
	}

	return false
}

// SetBasicAuth gets a reference to the given V1InstancesScrapeconfigsCreateRequestBasicAuth and assigns it to the BasicAuth field.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) SetBasicAuth(v V1InstancesScrapeconfigsCreateRequestBasicAuth) {
	o.BasicAuth = &v
}

// GetTlsConfig returns the TlsConfig field value if set, zero value otherwise.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) GetTlsConfig() V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig {
	if o == nil || o.TlsConfig == nil {
		var ret V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig
		return ret
	}
	return *o.TlsConfig
}

// GetTlsConfigOk returns a tuple with the TlsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) GetTlsConfigOk() (*V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig, bool) {
	if o == nil || o.TlsConfig == nil {
		return nil, false
	}
	return o.TlsConfig, true
}

// HasTlsConfig returns a boolean if a field has been set.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) HasTlsConfig() bool {
	if o != nil && o.TlsConfig != nil {
		return true
	}

	return false
}

// SetTlsConfig gets a reference to the given V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig and assigns it to the TlsConfig field.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) SetTlsConfig(v V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig) {
	o.TlsConfig = &v
}

// GetOauth2 returns the Oauth2 field value if set, zero value otherwise.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) GetOauth2() V1InstancesScrapeconfigsCreateRequestOauth2 {
	if o == nil || o.Oauth2 == nil {
		var ret V1InstancesScrapeconfigsCreateRequestOauth2
		return ret
	}
	return *o.Oauth2
}

// GetOauth2Ok returns a tuple with the Oauth2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) GetOauth2Ok() (*V1InstancesScrapeconfigsCreateRequestOauth2, bool) {
	if o == nil || o.Oauth2 == nil {
		return nil, false
	}
	return o.Oauth2, true
}

// HasOauth2 returns a boolean if a field has been set.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) HasOauth2() bool {
	if o != nil && o.Oauth2 != nil {
		return true
	}

	return false
}

// SetOauth2 gets a reference to the given V1InstancesScrapeconfigsCreateRequestOauth2 and assigns it to the Oauth2 field.
func (o *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) SetOauth2(v V1InstancesScrapeconfigsCreateRequestOauth2) {
	o.Oauth2 = &v
}

func (o V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if o.RefreshInterval != nil {
		toSerialize["refreshInterval"] = o.RefreshInterval
	}
	if o.BasicAuth != nil {
		toSerialize["basicAuth"] = o.BasicAuth
	}
	if o.TlsConfig != nil {
		toSerialize["tlsConfig"] = o.TlsConfig
	}
	if o.Oauth2 != nil {
		toSerialize["oauth2"] = o.Oauth2
	}
	return json.Marshal(toSerialize)
}

type NullableV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner struct {
	value *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner
	isSet bool
}

func (v NullableV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) Get() *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner {
	return v.value
}

func (v *NullableV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) Set(val *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner(val *V1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) *NullableV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner {
	return &NullableV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner{value: val, isSet: true}
}

func (v NullableV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1InstancesScrapeconfigsCreateRequestHttpSDConfigsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


