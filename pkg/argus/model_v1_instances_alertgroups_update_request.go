/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// V1InstancesAlertgroupsUpdateRequest Alert group that should be created or updated `Additional Validators:` * total config should not be bigger than 500000 characters as string since this the limitation of prometheus. 
type V1InstancesAlertgroupsUpdateRequest struct {
	// How often rules in the group are evaluated. `Additional Validators:` * must be a valid time string * should be >=60s
	Interval *string `json:"interval,omitempty"`
	// rules for the alert group
	Rules []V1InstancesAlertgroupsCreateRequestRulesInner `json:"rules"`
}

// NewV1InstancesAlertgroupsUpdateRequest instantiates a new V1InstancesAlertgroupsUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1InstancesAlertgroupsUpdateRequest(rules []V1InstancesAlertgroupsCreateRequestRulesInner) *V1InstancesAlertgroupsUpdateRequest {
	this := V1InstancesAlertgroupsUpdateRequest{}
	var interval string = "60s"
	this.Interval = &interval
	this.Rules = rules
	return &this
}

// NewV1InstancesAlertgroupsUpdateRequestWithDefaults instantiates a new V1InstancesAlertgroupsUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InstancesAlertgroupsUpdateRequestWithDefaults() *V1InstancesAlertgroupsUpdateRequest {
	this := V1InstancesAlertgroupsUpdateRequest{}
	var interval string = "60s"
	this.Interval = &interval
	return &this
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *V1InstancesAlertgroupsUpdateRequest) GetInterval() string {
	if o == nil || o.Interval == nil {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertgroupsUpdateRequest) GetIntervalOk() (*string, bool) {
	if o == nil || o.Interval == nil {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *V1InstancesAlertgroupsUpdateRequest) HasInterval() bool {
	if o != nil && o.Interval != nil {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *V1InstancesAlertgroupsUpdateRequest) SetInterval(v string) {
	o.Interval = &v
}

// GetRules returns the Rules field value
func (o *V1InstancesAlertgroupsUpdateRequest) GetRules() []V1InstancesAlertgroupsCreateRequestRulesInner {
	if o == nil {
		var ret []V1InstancesAlertgroupsCreateRequestRulesInner
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertgroupsUpdateRequest) GetRulesOk() ([]V1InstancesAlertgroupsCreateRequestRulesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *V1InstancesAlertgroupsUpdateRequest) SetRules(v []V1InstancesAlertgroupsCreateRequestRulesInner) {
	o.Rules = v
}

func (o V1InstancesAlertgroupsUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Interval != nil {
		toSerialize["interval"] = o.Interval
	}
	if true {
		toSerialize["rules"] = o.Rules
	}
	return json.Marshal(toSerialize)
}

type NullableV1InstancesAlertgroupsUpdateRequest struct {
	value *V1InstancesAlertgroupsUpdateRequest
	isSet bool
}

func (v NullableV1InstancesAlertgroupsUpdateRequest) Get() *V1InstancesAlertgroupsUpdateRequest {
	return v.value
}

func (v *NullableV1InstancesAlertgroupsUpdateRequest) Set(val *V1InstancesAlertgroupsUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1InstancesAlertgroupsUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1InstancesAlertgroupsUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1InstancesAlertgroupsUpdateRequest(val *V1InstancesAlertgroupsUpdateRequest) *NullableV1InstancesAlertgroupsUpdateRequest {
	return &NullableV1InstancesAlertgroupsUpdateRequest{value: val, isSet: true}
}

func (v NullableV1InstancesAlertgroupsUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1InstancesAlertgroupsUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


