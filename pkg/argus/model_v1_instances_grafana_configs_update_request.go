/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// V1InstancesGrafanaConfigsUpdateRequest Sending any of the attributes results in a set of the attribute and overwrites any previous configuration.
type V1InstancesGrafanaConfigsUpdateRequest struct {
	// If it's true, anyone can access the Grafana dashboards without logging in. If it is wrong, a login is required.
	PublicReadAccess *bool `json:"publicReadAccess,omitempty"`
	GenericOauth *V1InstancesGrafanaConfigsUpdateRequestGenericOauth `json:"genericOauth,omitempty"`
}

// NewV1InstancesGrafanaConfigsUpdateRequest instantiates a new V1InstancesGrafanaConfigsUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1InstancesGrafanaConfigsUpdateRequest() *V1InstancesGrafanaConfigsUpdateRequest {
	this := V1InstancesGrafanaConfigsUpdateRequest{}
	return &this
}

// NewV1InstancesGrafanaConfigsUpdateRequestWithDefaults instantiates a new V1InstancesGrafanaConfigsUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InstancesGrafanaConfigsUpdateRequestWithDefaults() *V1InstancesGrafanaConfigsUpdateRequest {
	this := V1InstancesGrafanaConfigsUpdateRequest{}
	return &this
}

// GetPublicReadAccess returns the PublicReadAccess field value if set, zero value otherwise.
func (o *V1InstancesGrafanaConfigsUpdateRequest) GetPublicReadAccess() bool {
	if o == nil || o.PublicReadAccess == nil {
		var ret bool
		return ret
	}
	return *o.PublicReadAccess
}

// GetPublicReadAccessOk returns a tuple with the PublicReadAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesGrafanaConfigsUpdateRequest) GetPublicReadAccessOk() (*bool, bool) {
	if o == nil || o.PublicReadAccess == nil {
		return nil, false
	}
	return o.PublicReadAccess, true
}

// HasPublicReadAccess returns a boolean if a field has been set.
func (o *V1InstancesGrafanaConfigsUpdateRequest) HasPublicReadAccess() bool {
	if o != nil && o.PublicReadAccess != nil {
		return true
	}

	return false
}

// SetPublicReadAccess gets a reference to the given bool and assigns it to the PublicReadAccess field.
func (o *V1InstancesGrafanaConfigsUpdateRequest) SetPublicReadAccess(v bool) {
	o.PublicReadAccess = &v
}

// GetGenericOauth returns the GenericOauth field value if set, zero value otherwise.
func (o *V1InstancesGrafanaConfigsUpdateRequest) GetGenericOauth() V1InstancesGrafanaConfigsUpdateRequestGenericOauth {
	if o == nil || o.GenericOauth == nil {
		var ret V1InstancesGrafanaConfigsUpdateRequestGenericOauth
		return ret
	}
	return *o.GenericOauth
}

// GetGenericOauthOk returns a tuple with the GenericOauth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesGrafanaConfigsUpdateRequest) GetGenericOauthOk() (*V1InstancesGrafanaConfigsUpdateRequestGenericOauth, bool) {
	if o == nil || o.GenericOauth == nil {
		return nil, false
	}
	return o.GenericOauth, true
}

// HasGenericOauth returns a boolean if a field has been set.
func (o *V1InstancesGrafanaConfigsUpdateRequest) HasGenericOauth() bool {
	if o != nil && o.GenericOauth != nil {
		return true
	}

	return false
}

// SetGenericOauth gets a reference to the given V1InstancesGrafanaConfigsUpdateRequestGenericOauth and assigns it to the GenericOauth field.
func (o *V1InstancesGrafanaConfigsUpdateRequest) SetGenericOauth(v V1InstancesGrafanaConfigsUpdateRequestGenericOauth) {
	o.GenericOauth = &v
}

func (o V1InstancesGrafanaConfigsUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicReadAccess != nil {
		toSerialize["publicReadAccess"] = o.PublicReadAccess
	}
	if o.GenericOauth != nil {
		toSerialize["genericOauth"] = o.GenericOauth
	}
	return json.Marshal(toSerialize)
}

type NullableV1InstancesGrafanaConfigsUpdateRequest struct {
	value *V1InstancesGrafanaConfigsUpdateRequest
	isSet bool
}

func (v NullableV1InstancesGrafanaConfigsUpdateRequest) Get() *V1InstancesGrafanaConfigsUpdateRequest {
	return v.value
}

func (v *NullableV1InstancesGrafanaConfigsUpdateRequest) Set(val *V1InstancesGrafanaConfigsUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1InstancesGrafanaConfigsUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1InstancesGrafanaConfigsUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1InstancesGrafanaConfigsUpdateRequest(val *V1InstancesGrafanaConfigsUpdateRequest) *NullableV1InstancesGrafanaConfigsUpdateRequest {
	return &NullableV1InstancesGrafanaConfigsUpdateRequest{value: val, isSet: true}
}

func (v NullableV1InstancesGrafanaConfigsUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1InstancesGrafanaConfigsUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


