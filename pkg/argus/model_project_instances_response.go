/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// ProjectInstancesResponse struct for ProjectInstancesResponse
type ProjectInstancesResponse struct {
	Message string `json:"message"`
	Instances []ProjectInstance `json:"instances"`
}

// NewProjectInstancesResponse instantiates a new ProjectInstancesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectInstancesResponse(message string, instances []ProjectInstance) *ProjectInstancesResponse {
	this := ProjectInstancesResponse{}
	this.Message = message
	this.Instances = instances
	return &this
}

// NewProjectInstancesResponseWithDefaults instantiates a new ProjectInstancesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectInstancesResponseWithDefaults() *ProjectInstancesResponse {
	this := ProjectInstancesResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *ProjectInstancesResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ProjectInstancesResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ProjectInstancesResponse) SetMessage(v string) {
	o.Message = v
}

// GetInstances returns the Instances field value
func (o *ProjectInstancesResponse) GetInstances() []ProjectInstance {
	if o == nil {
		var ret []ProjectInstance
		return ret
	}

	return o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value
// and a boolean to check if the value has been set.
func (o *ProjectInstancesResponse) GetInstancesOk() ([]ProjectInstance, bool) {
	if o == nil {
		return nil, false
	}
	return o.Instances, true
}

// SetInstances sets field value
func (o *ProjectInstancesResponse) SetInstances(v []ProjectInstance) {
	o.Instances = v
}

func (o ProjectInstancesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["instances"] = o.Instances
	}
	return json.Marshal(toSerialize)
}

type NullableProjectInstancesResponse struct {
	value *ProjectInstancesResponse
	isSet bool
}

func (v NullableProjectInstancesResponse) Get() *ProjectInstancesResponse {
	return v.value
}

func (v *NullableProjectInstancesResponse) Set(val *ProjectInstancesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectInstancesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectInstancesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectInstancesResponse(val *ProjectInstancesResponse) *NullableProjectInstancesResponse {
	return &NullableProjectInstancesResponse{value: val, isSet: true}
}

func (v NullableProjectInstancesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectInstancesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


