/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// AlertGroupResponse struct for AlertGroupResponse
type AlertGroupResponse struct {
	Message string `json:"message"`
	Data AlertGroupJson `json:"data"`
}

// NewAlertGroupResponse instantiates a new AlertGroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertGroupResponse(message string, data AlertGroupJson) *AlertGroupResponse {
	this := AlertGroupResponse{}
	this.Message = message
	this.Data = data
	return &this
}

// NewAlertGroupResponseWithDefaults instantiates a new AlertGroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertGroupResponseWithDefaults() *AlertGroupResponse {
	this := AlertGroupResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *AlertGroupResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *AlertGroupResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *AlertGroupResponse) SetMessage(v string) {
	o.Message = v
}

// GetData returns the Data field value
func (o *AlertGroupResponse) GetData() AlertGroupJson {
	if o == nil {
		var ret AlertGroupJson
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AlertGroupResponse) GetDataOk() (*AlertGroupJson, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *AlertGroupResponse) SetData(v AlertGroupJson) {
	o.Data = v
}

func (o AlertGroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableAlertGroupResponse struct {
	value *AlertGroupResponse
	isSet bool
}

func (v NullableAlertGroupResponse) Get() *AlertGroupResponse {
	return v.value
}

func (v *NullableAlertGroupResponse) Set(val *AlertGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertGroupResponse(val *AlertGroupResponse) *NullableAlertGroupResponse {
	return &NullableAlertGroupResponse{value: val, isSet: true}
}

func (v NullableAlertGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


