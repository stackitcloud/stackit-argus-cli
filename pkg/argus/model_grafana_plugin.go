/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// GrafanaPlugin struct for GrafanaPlugin
type GrafanaPlugin struct {
	Message string `json:"message"`
	Plugins []GrafanaPluginModel `json:"plugins"`
}

// NewGrafanaPlugin instantiates a new GrafanaPlugin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrafanaPlugin(message string, plugins []GrafanaPluginModel) *GrafanaPlugin {
	this := GrafanaPlugin{}
	this.Message = message
	this.Plugins = plugins
	return &this
}

// NewGrafanaPluginWithDefaults instantiates a new GrafanaPlugin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrafanaPluginWithDefaults() *GrafanaPlugin {
	this := GrafanaPlugin{}
	return &this
}

// GetMessage returns the Message field value
func (o *GrafanaPlugin) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *GrafanaPlugin) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *GrafanaPlugin) SetMessage(v string) {
	o.Message = v
}

// GetPlugins returns the Plugins field value
func (o *GrafanaPlugin) GetPlugins() []GrafanaPluginModel {
	if o == nil {
		var ret []GrafanaPluginModel
		return ret
	}

	return o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value
// and a boolean to check if the value has been set.
func (o *GrafanaPlugin) GetPluginsOk() ([]GrafanaPluginModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Plugins, true
}

// SetPlugins sets field value
func (o *GrafanaPlugin) SetPlugins(v []GrafanaPluginModel) {
	o.Plugins = v
}

func (o GrafanaPlugin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["plugins"] = o.Plugins
	}
	return json.Marshal(toSerialize)
}

type NullableGrafanaPlugin struct {
	value *GrafanaPlugin
	isSet bool
}

func (v NullableGrafanaPlugin) Get() *GrafanaPlugin {
	return v.value
}

func (v *NullableGrafanaPlugin) Set(val *GrafanaPlugin) {
	v.value = val
	v.isSet = true
}

func (v NullableGrafanaPlugin) IsSet() bool {
	return v.isSet
}

func (v *NullableGrafanaPlugin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrafanaPlugin(val *GrafanaPlugin) *NullableGrafanaPlugin {
	return &NullableGrafanaPlugin{value: val, isSet: true}
}

func (v NullableGrafanaPlugin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrafanaPlugin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


