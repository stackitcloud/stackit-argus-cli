/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// V1InstancesScrapeconfigsCreateRequestOauth2 OAuth 2.0 authentication using the client credentials grant type. Prometheus fetches an access token from the specified endpoint with the given client access and secret keys. `Additional Validators:` * if oauth2 is in the body no other authentication method should be in the body
type V1InstancesScrapeconfigsCreateRequestOauth2 struct {
	// clientId
	ClientId string `json:"clientId"`
	// clientSecret
	ClientSecret string `json:"clientSecret"`
	// The URL to fetch the token from.
	TokenUrl string `json:"tokenUrl"`
	// The URL to fetch the token from.
	Scopes []string `json:"scopes,omitempty"`
	TlsConfig *V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig `json:"tlsConfig,omitempty"`
}

// NewV1InstancesScrapeconfigsCreateRequestOauth2 instantiates a new V1InstancesScrapeconfigsCreateRequestOauth2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1InstancesScrapeconfigsCreateRequestOauth2(clientId string, clientSecret string, tokenUrl string) *V1InstancesScrapeconfigsCreateRequestOauth2 {
	this := V1InstancesScrapeconfigsCreateRequestOauth2{}
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	this.TokenUrl = tokenUrl
	return &this
}

// NewV1InstancesScrapeconfigsCreateRequestOauth2WithDefaults instantiates a new V1InstancesScrapeconfigsCreateRequestOauth2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InstancesScrapeconfigsCreateRequestOauth2WithDefaults() *V1InstancesScrapeconfigsCreateRequestOauth2 {
	this := V1InstancesScrapeconfigsCreateRequestOauth2{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetTokenUrl returns the TokenUrl field value
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) GetTokenUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenUrl
}

// GetTokenUrlOk returns a tuple with the TokenUrl field value
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) GetTokenUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenUrl, true
}

// SetTokenUrl sets field value
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) SetTokenUrl(v string) {
	o.TokenUrl = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) GetScopes() []string {
	if o == nil || o.Scopes == nil {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) GetScopesOk() ([]string, bool) {
	if o == nil || o.Scopes == nil {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) HasScopes() bool {
	if o != nil && o.Scopes != nil {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) SetScopes(v []string) {
	o.Scopes = v
}

// GetTlsConfig returns the TlsConfig field value if set, zero value otherwise.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) GetTlsConfig() V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig {
	if o == nil || o.TlsConfig == nil {
		var ret V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig
		return ret
	}
	return *o.TlsConfig
}

// GetTlsConfigOk returns a tuple with the TlsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) GetTlsConfigOk() (*V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig, bool) {
	if o == nil || o.TlsConfig == nil {
		return nil, false
	}
	return o.TlsConfig, true
}

// HasTlsConfig returns a boolean if a field has been set.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) HasTlsConfig() bool {
	if o != nil && o.TlsConfig != nil {
		return true
	}

	return false
}

// SetTlsConfig gets a reference to the given V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig and assigns it to the TlsConfig field.
func (o *V1InstancesScrapeconfigsCreateRequestOauth2) SetTlsConfig(v V1InstancesScrapeconfigsCreateRequestOauth2TlsConfig) {
	o.TlsConfig = &v
}

func (o V1InstancesScrapeconfigsCreateRequestOauth2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clientId"] = o.ClientId
	}
	if true {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if true {
		toSerialize["tokenUrl"] = o.TokenUrl
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	if o.TlsConfig != nil {
		toSerialize["tlsConfig"] = o.TlsConfig
	}
	return json.Marshal(toSerialize)
}

type NullableV1InstancesScrapeconfigsCreateRequestOauth2 struct {
	value *V1InstancesScrapeconfigsCreateRequestOauth2
	isSet bool
}

func (v NullableV1InstancesScrapeconfigsCreateRequestOauth2) Get() *V1InstancesScrapeconfigsCreateRequestOauth2 {
	return v.value
}

func (v *NullableV1InstancesScrapeconfigsCreateRequestOauth2) Set(val *V1InstancesScrapeconfigsCreateRequestOauth2) {
	v.value = val
	v.isSet = true
}

func (v NullableV1InstancesScrapeconfigsCreateRequestOauth2) IsSet() bool {
	return v.isSet
}

func (v *NullableV1InstancesScrapeconfigsCreateRequestOauth2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1InstancesScrapeconfigsCreateRequestOauth2(val *V1InstancesScrapeconfigsCreateRequestOauth2) *NullableV1InstancesScrapeconfigsCreateRequestOauth2 {
	return &NullableV1InstancesScrapeconfigsCreateRequestOauth2{value: val, isSet: true}
}

func (v NullableV1InstancesScrapeconfigsCreateRequestOauth2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1InstancesScrapeconfigsCreateRequestOauth2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


