/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: 1.0
Contact: patrick.koss@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// V1InstancesAlertconfigsUpdateRequestGlobal Global config. If nothing passed the default argus config will be used.
type V1InstancesAlertconfigsUpdateRequestGlobal struct {
	// ResolveTimeout is the default value used by alertmanager if the alert does not include EndsAt, after this time passes it can declare the alert as resolved if it has not been updated. This has no impact on alerts from Prometheus, as they always include EndsAt.
	ResolveTimeout *string `json:"resolveTimeout,omitempty"`
	// The default SMTP From header field.
	SmtpFrom *string `json:"smtpFrom,omitempty"`
	// The default SMTP smarthost used for sending emails, including port number. Port number usually is 25, or 587 for SMTP over TLS (sometimes referred to as STARTTLS). Example: smtp.example.org:587
	SmtpSmarthost *string `json:"smtpSmarthost,omitempty"`
	// SMTP Auth using CRAM-MD5, LOGIN and PLAIN. If empty, Alertmanager doesn't authenticate to the SMTP server.
	SmtpAuthUsername *string `json:"smtpAuthUsername,omitempty"`
	// SMTP Auth using LOGIN and PLAIN.
	SmtpAuthPassword *string `json:"smtpAuthPassword,omitempty"`
	// Opsgenie api key
	OpsgenieApiKey *string `json:"opsgenieApiKey,omitempty"`
	// Opsgenie api url
	OpsgenieApiUrl *string `json:"opsgenieApiUrl,omitempty"`
}

// NewV1InstancesAlertconfigsUpdateRequestGlobal instantiates a new V1InstancesAlertconfigsUpdateRequestGlobal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1InstancesAlertconfigsUpdateRequestGlobal() *V1InstancesAlertconfigsUpdateRequestGlobal {
	this := V1InstancesAlertconfigsUpdateRequestGlobal{}
	var resolveTimeout string = "5m"
	this.ResolveTimeout = &resolveTimeout
	return &this
}

// NewV1InstancesAlertconfigsUpdateRequestGlobalWithDefaults instantiates a new V1InstancesAlertconfigsUpdateRequestGlobal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InstancesAlertconfigsUpdateRequestGlobalWithDefaults() *V1InstancesAlertconfigsUpdateRequestGlobal {
	this := V1InstancesAlertconfigsUpdateRequestGlobal{}
	var resolveTimeout string = "5m"
	this.ResolveTimeout = &resolveTimeout
	return &this
}

// GetResolveTimeout returns the ResolveTimeout field value if set, zero value otherwise.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetResolveTimeout() string {
	if o == nil || o.ResolveTimeout == nil {
		var ret string
		return ret
	}
	return *o.ResolveTimeout
}

// GetResolveTimeoutOk returns a tuple with the ResolveTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetResolveTimeoutOk() (*string, bool) {
	if o == nil || o.ResolveTimeout == nil {
		return nil, false
	}
	return o.ResolveTimeout, true
}

// HasResolveTimeout returns a boolean if a field has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) HasResolveTimeout() bool {
	if o != nil && o.ResolveTimeout != nil {
		return true
	}

	return false
}

// SetResolveTimeout gets a reference to the given string and assigns it to the ResolveTimeout field.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) SetResolveTimeout(v string) {
	o.ResolveTimeout = &v
}

// GetSmtpFrom returns the SmtpFrom field value if set, zero value otherwise.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetSmtpFrom() string {
	if o == nil || o.SmtpFrom == nil {
		var ret string
		return ret
	}
	return *o.SmtpFrom
}

// GetSmtpFromOk returns a tuple with the SmtpFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetSmtpFromOk() (*string, bool) {
	if o == nil || o.SmtpFrom == nil {
		return nil, false
	}
	return o.SmtpFrom, true
}

// HasSmtpFrom returns a boolean if a field has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) HasSmtpFrom() bool {
	if o != nil && o.SmtpFrom != nil {
		return true
	}

	return false
}

// SetSmtpFrom gets a reference to the given string and assigns it to the SmtpFrom field.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) SetSmtpFrom(v string) {
	o.SmtpFrom = &v
}

// GetSmtpSmarthost returns the SmtpSmarthost field value if set, zero value otherwise.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetSmtpSmarthost() string {
	if o == nil || o.SmtpSmarthost == nil {
		var ret string
		return ret
	}
	return *o.SmtpSmarthost
}

// GetSmtpSmarthostOk returns a tuple with the SmtpSmarthost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetSmtpSmarthostOk() (*string, bool) {
	if o == nil || o.SmtpSmarthost == nil {
		return nil, false
	}
	return o.SmtpSmarthost, true
}

// HasSmtpSmarthost returns a boolean if a field has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) HasSmtpSmarthost() bool {
	if o != nil && o.SmtpSmarthost != nil {
		return true
	}

	return false
}

// SetSmtpSmarthost gets a reference to the given string and assigns it to the SmtpSmarthost field.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) SetSmtpSmarthost(v string) {
	o.SmtpSmarthost = &v
}

// GetSmtpAuthUsername returns the SmtpAuthUsername field value if set, zero value otherwise.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetSmtpAuthUsername() string {
	if o == nil || o.SmtpAuthUsername == nil {
		var ret string
		return ret
	}
	return *o.SmtpAuthUsername
}

// GetSmtpAuthUsernameOk returns a tuple with the SmtpAuthUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetSmtpAuthUsernameOk() (*string, bool) {
	if o == nil || o.SmtpAuthUsername == nil {
		return nil, false
	}
	return o.SmtpAuthUsername, true
}

// HasSmtpAuthUsername returns a boolean if a field has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) HasSmtpAuthUsername() bool {
	if o != nil && o.SmtpAuthUsername != nil {
		return true
	}

	return false
}

// SetSmtpAuthUsername gets a reference to the given string and assigns it to the SmtpAuthUsername field.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) SetSmtpAuthUsername(v string) {
	o.SmtpAuthUsername = &v
}

// GetSmtpAuthPassword returns the SmtpAuthPassword field value if set, zero value otherwise.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetSmtpAuthPassword() string {
	if o == nil || o.SmtpAuthPassword == nil {
		var ret string
		return ret
	}
	return *o.SmtpAuthPassword
}

// GetSmtpAuthPasswordOk returns a tuple with the SmtpAuthPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetSmtpAuthPasswordOk() (*string, bool) {
	if o == nil || o.SmtpAuthPassword == nil {
		return nil, false
	}
	return o.SmtpAuthPassword, true
}

// HasSmtpAuthPassword returns a boolean if a field has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) HasSmtpAuthPassword() bool {
	if o != nil && o.SmtpAuthPassword != nil {
		return true
	}

	return false
}

// SetSmtpAuthPassword gets a reference to the given string and assigns it to the SmtpAuthPassword field.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) SetSmtpAuthPassword(v string) {
	o.SmtpAuthPassword = &v
}

// GetOpsgenieApiKey returns the OpsgenieApiKey field value if set, zero value otherwise.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetOpsgenieApiKey() string {
	if o == nil || o.OpsgenieApiKey == nil {
		var ret string
		return ret
	}
	return *o.OpsgenieApiKey
}

// GetOpsgenieApiKeyOk returns a tuple with the OpsgenieApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetOpsgenieApiKeyOk() (*string, bool) {
	if o == nil || o.OpsgenieApiKey == nil {
		return nil, false
	}
	return o.OpsgenieApiKey, true
}

// HasOpsgenieApiKey returns a boolean if a field has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) HasOpsgenieApiKey() bool {
	if o != nil && o.OpsgenieApiKey != nil {
		return true
	}

	return false
}

// SetOpsgenieApiKey gets a reference to the given string and assigns it to the OpsgenieApiKey field.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) SetOpsgenieApiKey(v string) {
	o.OpsgenieApiKey = &v
}

// GetOpsgenieApiUrl returns the OpsgenieApiUrl field value if set, zero value otherwise.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetOpsgenieApiUrl() string {
	if o == nil || o.OpsgenieApiUrl == nil {
		var ret string
		return ret
	}
	return *o.OpsgenieApiUrl
}

// GetOpsgenieApiUrlOk returns a tuple with the OpsgenieApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) GetOpsgenieApiUrlOk() (*string, bool) {
	if o == nil || o.OpsgenieApiUrl == nil {
		return nil, false
	}
	return o.OpsgenieApiUrl, true
}

// HasOpsgenieApiUrl returns a boolean if a field has been set.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) HasOpsgenieApiUrl() bool {
	if o != nil && o.OpsgenieApiUrl != nil {
		return true
	}

	return false
}

// SetOpsgenieApiUrl gets a reference to the given string and assigns it to the OpsgenieApiUrl field.
func (o *V1InstancesAlertconfigsUpdateRequestGlobal) SetOpsgenieApiUrl(v string) {
	o.OpsgenieApiUrl = &v
}

func (o V1InstancesAlertconfigsUpdateRequestGlobal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResolveTimeout != nil {
		toSerialize["resolveTimeout"] = o.ResolveTimeout
	}
	if o.SmtpFrom != nil {
		toSerialize["smtpFrom"] = o.SmtpFrom
	}
	if o.SmtpSmarthost != nil {
		toSerialize["smtpSmarthost"] = o.SmtpSmarthost
	}
	if o.SmtpAuthUsername != nil {
		toSerialize["smtpAuthUsername"] = o.SmtpAuthUsername
	}
	if o.SmtpAuthPassword != nil {
		toSerialize["smtpAuthPassword"] = o.SmtpAuthPassword
	}
	if o.OpsgenieApiKey != nil {
		toSerialize["opsgenieApiKey"] = o.OpsgenieApiKey
	}
	if o.OpsgenieApiUrl != nil {
		toSerialize["opsgenieApiUrl"] = o.OpsgenieApiUrl
	}
	return json.Marshal(toSerialize)
}

type NullableV1InstancesAlertconfigsUpdateRequestGlobal struct {
	value *V1InstancesAlertconfigsUpdateRequestGlobal
	isSet bool
}

func (v NullableV1InstancesAlertconfigsUpdateRequestGlobal) Get() *V1InstancesAlertconfigsUpdateRequestGlobal {
	return v.value
}

func (v *NullableV1InstancesAlertconfigsUpdateRequestGlobal) Set(val *V1InstancesAlertconfigsUpdateRequestGlobal) {
	v.value = val
	v.isSet = true
}

func (v NullableV1InstancesAlertconfigsUpdateRequestGlobal) IsSet() bool {
	return v.isSet
}

func (v *NullableV1InstancesAlertconfigsUpdateRequestGlobal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1InstancesAlertconfigsUpdateRequestGlobal(val *V1InstancesAlertconfigsUpdateRequestGlobal) *NullableV1InstancesAlertconfigsUpdateRequestGlobal {
	return &NullableV1InstancesAlertconfigsUpdateRequestGlobal{value: val, isSet: true}
}

func (v NullableV1InstancesAlertconfigsUpdateRequestGlobal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1InstancesAlertconfigsUpdateRequestGlobal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
