/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// TracesConfigResponse struct for TracesConfigResponse
type TracesConfigResponse struct {
	Message string `json:"message"`
	Config TraceConfig `json:"config"`
}

// NewTracesConfigResponse instantiates a new TracesConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTracesConfigResponse(message string, config TraceConfig) *TracesConfigResponse {
	this := TracesConfigResponse{}
	this.Message = message
	this.Config = config
	return &this
}

// NewTracesConfigResponseWithDefaults instantiates a new TracesConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTracesConfigResponseWithDefaults() *TracesConfigResponse {
	this := TracesConfigResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *TracesConfigResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *TracesConfigResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *TracesConfigResponse) SetMessage(v string) {
	o.Message = v
}

// GetConfig returns the Config field value
func (o *TracesConfigResponse) GetConfig() TraceConfig {
	if o == nil {
		var ret TraceConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *TracesConfigResponse) GetConfigOk() (*TraceConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *TracesConfigResponse) SetConfig(v TraceConfig) {
	o.Config = v
}

func (o TracesConfigResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableTracesConfigResponse struct {
	value *TracesConfigResponse
	isSet bool
}

func (v NullableTracesConfigResponse) Get() *TracesConfigResponse {
	return v.value
}

func (v *NullableTracesConfigResponse) Set(val *TracesConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTracesConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTracesConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTracesConfigResponse(val *TracesConfigResponse) *NullableTracesConfigResponse {
	return &NullableTracesConfigResponse{value: val, isSet: true}
}

func (v NullableTracesConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTracesConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


