/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: v1
Contact: stackit-argus@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// BackupScheduleResponse struct for BackupScheduleResponse
type BackupScheduleResponse struct {
	Message string `json:"message"`
	AlertConfigBackupSchedules []BackupScheduleModelJson `json:"alertConfigBackupSchedules,omitempty"`
	AlertRulesBackupSchedules []BackupScheduleModelJson `json:"alertRulesBackupSchedules,omitempty"`
	ScrapeConfigBackupSchedules []BackupScheduleModelJson `json:"scrapeConfigBackupSchedules,omitempty"`
	GrafanaBackupSchedules []BackupScheduleModelJson `json:"grafanaBackupSchedules,omitempty"`
}

// NewBackupScheduleResponse instantiates a new BackupScheduleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupScheduleResponse(message string) *BackupScheduleResponse {
	this := BackupScheduleResponse{}
	this.Message = message
	return &this
}

// NewBackupScheduleResponseWithDefaults instantiates a new BackupScheduleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupScheduleResponseWithDefaults() *BackupScheduleResponse {
	this := BackupScheduleResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *BackupScheduleResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *BackupScheduleResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *BackupScheduleResponse) SetMessage(v string) {
	o.Message = v
}

// GetAlertConfigBackupSchedules returns the AlertConfigBackupSchedules field value if set, zero value otherwise.
func (o *BackupScheduleResponse) GetAlertConfigBackupSchedules() []BackupScheduleModelJson {
	if o == nil || o.AlertConfigBackupSchedules == nil {
		var ret []BackupScheduleModelJson
		return ret
	}
	return o.AlertConfigBackupSchedules
}

// GetAlertConfigBackupSchedulesOk returns a tuple with the AlertConfigBackupSchedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleResponse) GetAlertConfigBackupSchedulesOk() ([]BackupScheduleModelJson, bool) {
	if o == nil || o.AlertConfigBackupSchedules == nil {
		return nil, false
	}
	return o.AlertConfigBackupSchedules, true
}

// HasAlertConfigBackupSchedules returns a boolean if a field has been set.
func (o *BackupScheduleResponse) HasAlertConfigBackupSchedules() bool {
	if o != nil && o.AlertConfigBackupSchedules != nil {
		return true
	}

	return false
}

// SetAlertConfigBackupSchedules gets a reference to the given []BackupScheduleModelJson and assigns it to the AlertConfigBackupSchedules field.
func (o *BackupScheduleResponse) SetAlertConfigBackupSchedules(v []BackupScheduleModelJson) {
	o.AlertConfigBackupSchedules = v
}

// GetAlertRulesBackupSchedules returns the AlertRulesBackupSchedules field value if set, zero value otherwise.
func (o *BackupScheduleResponse) GetAlertRulesBackupSchedules() []BackupScheduleModelJson {
	if o == nil || o.AlertRulesBackupSchedules == nil {
		var ret []BackupScheduleModelJson
		return ret
	}
	return o.AlertRulesBackupSchedules
}

// GetAlertRulesBackupSchedulesOk returns a tuple with the AlertRulesBackupSchedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleResponse) GetAlertRulesBackupSchedulesOk() ([]BackupScheduleModelJson, bool) {
	if o == nil || o.AlertRulesBackupSchedules == nil {
		return nil, false
	}
	return o.AlertRulesBackupSchedules, true
}

// HasAlertRulesBackupSchedules returns a boolean if a field has been set.
func (o *BackupScheduleResponse) HasAlertRulesBackupSchedules() bool {
	if o != nil && o.AlertRulesBackupSchedules != nil {
		return true
	}

	return false
}

// SetAlertRulesBackupSchedules gets a reference to the given []BackupScheduleModelJson and assigns it to the AlertRulesBackupSchedules field.
func (o *BackupScheduleResponse) SetAlertRulesBackupSchedules(v []BackupScheduleModelJson) {
	o.AlertRulesBackupSchedules = v
}

// GetScrapeConfigBackupSchedules returns the ScrapeConfigBackupSchedules field value if set, zero value otherwise.
func (o *BackupScheduleResponse) GetScrapeConfigBackupSchedules() []BackupScheduleModelJson {
	if o == nil || o.ScrapeConfigBackupSchedules == nil {
		var ret []BackupScheduleModelJson
		return ret
	}
	return o.ScrapeConfigBackupSchedules
}

// GetScrapeConfigBackupSchedulesOk returns a tuple with the ScrapeConfigBackupSchedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleResponse) GetScrapeConfigBackupSchedulesOk() ([]BackupScheduleModelJson, bool) {
	if o == nil || o.ScrapeConfigBackupSchedules == nil {
		return nil, false
	}
	return o.ScrapeConfigBackupSchedules, true
}

// HasScrapeConfigBackupSchedules returns a boolean if a field has been set.
func (o *BackupScheduleResponse) HasScrapeConfigBackupSchedules() bool {
	if o != nil && o.ScrapeConfigBackupSchedules != nil {
		return true
	}

	return false
}

// SetScrapeConfigBackupSchedules gets a reference to the given []BackupScheduleModelJson and assigns it to the ScrapeConfigBackupSchedules field.
func (o *BackupScheduleResponse) SetScrapeConfigBackupSchedules(v []BackupScheduleModelJson) {
	o.ScrapeConfigBackupSchedules = v
}

// GetGrafanaBackupSchedules returns the GrafanaBackupSchedules field value if set, zero value otherwise.
func (o *BackupScheduleResponse) GetGrafanaBackupSchedules() []BackupScheduleModelJson {
	if o == nil || o.GrafanaBackupSchedules == nil {
		var ret []BackupScheduleModelJson
		return ret
	}
	return o.GrafanaBackupSchedules
}

// GetGrafanaBackupSchedulesOk returns a tuple with the GrafanaBackupSchedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleResponse) GetGrafanaBackupSchedulesOk() ([]BackupScheduleModelJson, bool) {
	if o == nil || o.GrafanaBackupSchedules == nil {
		return nil, false
	}
	return o.GrafanaBackupSchedules, true
}

// HasGrafanaBackupSchedules returns a boolean if a field has been set.
func (o *BackupScheduleResponse) HasGrafanaBackupSchedules() bool {
	if o != nil && o.GrafanaBackupSchedules != nil {
		return true
	}

	return false
}

// SetGrafanaBackupSchedules gets a reference to the given []BackupScheduleModelJson and assigns it to the GrafanaBackupSchedules field.
func (o *BackupScheduleResponse) SetGrafanaBackupSchedules(v []BackupScheduleModelJson) {
	o.GrafanaBackupSchedules = v
}

func (o BackupScheduleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if o.AlertConfigBackupSchedules != nil {
		toSerialize["alertConfigBackupSchedules"] = o.AlertConfigBackupSchedules
	}
	if o.AlertRulesBackupSchedules != nil {
		toSerialize["alertRulesBackupSchedules"] = o.AlertRulesBackupSchedules
	}
	if o.ScrapeConfigBackupSchedules != nil {
		toSerialize["scrapeConfigBackupSchedules"] = o.ScrapeConfigBackupSchedules
	}
	if o.GrafanaBackupSchedules != nil {
		toSerialize["grafanaBackupSchedules"] = o.GrafanaBackupSchedules
	}
	return json.Marshal(toSerialize)
}

type NullableBackupScheduleResponse struct {
	value *BackupScheduleResponse
	isSet bool
}

func (v NullableBackupScheduleResponse) Get() *BackupScheduleResponse {
	return v.value
}

func (v *NullableBackupScheduleResponse) Set(val *BackupScheduleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupScheduleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupScheduleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupScheduleResponse(val *BackupScheduleResponse) *NullableBackupScheduleResponse {
	return &NullableBackupScheduleResponse{value: val, isSet: true}
}

func (v NullableBackupScheduleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupScheduleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


