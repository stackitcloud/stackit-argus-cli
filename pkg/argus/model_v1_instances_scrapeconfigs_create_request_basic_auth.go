/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: 1.0
Contact: patrick.koss@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// V1InstancesScrapeconfigsCreateRequestBasicAuth Sets the `Authorization` header on every scrape request with the configured username and password.
type V1InstancesScrapeconfigsCreateRequestBasicAuth struct {
	// username
	Username *string `json:"username,omitempty"`
	// password
	Password *string `json:"password,omitempty"`
}

// NewV1InstancesScrapeconfigsCreateRequestBasicAuth instantiates a new V1InstancesScrapeconfigsCreateRequestBasicAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1InstancesScrapeconfigsCreateRequestBasicAuth() *V1InstancesScrapeconfigsCreateRequestBasicAuth {
	this := V1InstancesScrapeconfigsCreateRequestBasicAuth{}
	return &this
}

// NewV1InstancesScrapeconfigsCreateRequestBasicAuthWithDefaults instantiates a new V1InstancesScrapeconfigsCreateRequestBasicAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InstancesScrapeconfigsCreateRequestBasicAuthWithDefaults() *V1InstancesScrapeconfigsCreateRequestBasicAuth {
	this := V1InstancesScrapeconfigsCreateRequestBasicAuth{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *V1InstancesScrapeconfigsCreateRequestBasicAuth) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestBasicAuth) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *V1InstancesScrapeconfigsCreateRequestBasicAuth) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *V1InstancesScrapeconfigsCreateRequestBasicAuth) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *V1InstancesScrapeconfigsCreateRequestBasicAuth) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1InstancesScrapeconfigsCreateRequestBasicAuth) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *V1InstancesScrapeconfigsCreateRequestBasicAuth) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *V1InstancesScrapeconfigsCreateRequestBasicAuth) SetPassword(v string) {
	o.Password = &v
}

func (o V1InstancesScrapeconfigsCreateRequestBasicAuth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableV1InstancesScrapeconfigsCreateRequestBasicAuth struct {
	value *V1InstancesScrapeconfigsCreateRequestBasicAuth
	isSet bool
}

func (v NullableV1InstancesScrapeconfigsCreateRequestBasicAuth) Get() *V1InstancesScrapeconfigsCreateRequestBasicAuth {
	return v.value
}

func (v *NullableV1InstancesScrapeconfigsCreateRequestBasicAuth) Set(val *V1InstancesScrapeconfigsCreateRequestBasicAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableV1InstancesScrapeconfigsCreateRequestBasicAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableV1InstancesScrapeconfigsCreateRequestBasicAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1InstancesScrapeconfigsCreateRequestBasicAuth(val *V1InstancesScrapeconfigsCreateRequestBasicAuth) *NullableV1InstancesScrapeconfigsCreateRequestBasicAuth {
	return &NullableV1InstancesScrapeconfigsCreateRequestBasicAuth{value: val, isSet: true}
}

func (v NullableV1InstancesScrapeconfigsCreateRequestBasicAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1InstancesScrapeconfigsCreateRequestBasicAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
