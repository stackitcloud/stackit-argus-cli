/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: 1.0
Contact: patrick.koss@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// Alert struct for Alert
type Alert struct {
	Route        Route          `json:"route"`
	Receivers    []Receivers    `json:"receivers"`
	InhibitRules []InhibitRules `json:"inhibitRules,omitempty"`
	Templates    []string       `json:"templates,omitempty"`
	Global       *Global        `json:"global,omitempty"`
}

// NewAlert instantiates a new Alert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlert(route Route, receivers []Receivers) *Alert {
	this := Alert{}
	this.Route = route
	this.Receivers = receivers
	return &this
}

// NewAlertWithDefaults instantiates a new Alert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertWithDefaults() *Alert {
	this := Alert{}
	return &this
}

// GetRoute returns the Route field value
func (o *Alert) GetRoute() Route {
	if o == nil {
		var ret Route
		return ret
	}

	return o.Route
}

// GetRouteOk returns a tuple with the Route field value
// and a boolean to check if the value has been set.
func (o *Alert) GetRouteOk() (*Route, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Route, true
}

// SetRoute sets field value
func (o *Alert) SetRoute(v Route) {
	o.Route = v
}

// GetReceivers returns the Receivers field value
func (o *Alert) GetReceivers() []Receivers {
	if o == nil {
		var ret []Receivers
		return ret
	}

	return o.Receivers
}

// GetReceiversOk returns a tuple with the Receivers field value
// and a boolean to check if the value has been set.
func (o *Alert) GetReceiversOk() ([]Receivers, bool) {
	if o == nil {
		return nil, false
	}
	return o.Receivers, true
}

// SetReceivers sets field value
func (o *Alert) SetReceivers(v []Receivers) {
	o.Receivers = v
}

// GetInhibitRules returns the InhibitRules field value if set, zero value otherwise.
func (o *Alert) GetInhibitRules() []InhibitRules {
	if o == nil || o.InhibitRules == nil {
		var ret []InhibitRules
		return ret
	}
	return o.InhibitRules
}

// GetInhibitRulesOk returns a tuple with the InhibitRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetInhibitRulesOk() ([]InhibitRules, bool) {
	if o == nil || o.InhibitRules == nil {
		return nil, false
	}
	return o.InhibitRules, true
}

// HasInhibitRules returns a boolean if a field has been set.
func (o *Alert) HasInhibitRules() bool {
	if o != nil && o.InhibitRules != nil {
		return true
	}

	return false
}

// SetInhibitRules gets a reference to the given []InhibitRules and assigns it to the InhibitRules field.
func (o *Alert) SetInhibitRules(v []InhibitRules) {
	o.InhibitRules = v
}

// GetTemplates returns the Templates field value if set, zero value otherwise.
func (o *Alert) GetTemplates() []string {
	if o == nil || o.Templates == nil {
		var ret []string
		return ret
	}
	return o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetTemplatesOk() ([]string, bool) {
	if o == nil || o.Templates == nil {
		return nil, false
	}
	return o.Templates, true
}

// HasTemplates returns a boolean if a field has been set.
func (o *Alert) HasTemplates() bool {
	if o != nil && o.Templates != nil {
		return true
	}

	return false
}

// SetTemplates gets a reference to the given []string and assigns it to the Templates field.
func (o *Alert) SetTemplates(v []string) {
	o.Templates = v
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *Alert) GetGlobal() Global {
	if o == nil || o.Global == nil {
		var ret Global
		return ret
	}
	return *o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetGlobalOk() (*Global, bool) {
	if o == nil || o.Global == nil {
		return nil, false
	}
	return o.Global, true
}

// HasGlobal returns a boolean if a field has been set.
func (o *Alert) HasGlobal() bool {
	if o != nil && o.Global != nil {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given Global and assigns it to the Global field.
func (o *Alert) SetGlobal(v Global) {
	o.Global = &v
}

func (o Alert) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["route"] = o.Route
	}
	if true {
		toSerialize["receivers"] = o.Receivers
	}
	if o.InhibitRules != nil {
		toSerialize["inhibitRules"] = o.InhibitRules
	}
	if o.Templates != nil {
		toSerialize["templates"] = o.Templates
	}
	if o.Global != nil {
		toSerialize["global"] = o.Global
	}
	return json.Marshal(toSerialize)
}

type NullableAlert struct {
	value *Alert
	isSet bool
}

func (v NullableAlert) Get() *Alert {
	return v.value
}

func (v *NullableAlert) Set(val *Alert) {
	v.value = val
	v.isSet = true
}

func (v NullableAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlert(val *Alert) *NullableAlert {
	return &NullableAlert{value: val, isSet: true}
}

func (v NullableAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
