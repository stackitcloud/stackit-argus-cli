/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: 1.0
Contact: patrick.koss@mail.schwarz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// InstanceSensitiveData struct for InstanceSensitiveData
type InstanceSensitiveData struct {
	Cluster                 string    `json:"cluster"`
	Instance                string    `json:"instance"`
	GrafanaUrl              string    `json:"grafanaUrl"`
	Name                    *string   `json:"name,omitempty"`
	DashboardUrl            string    `json:"dashboardUrl"`
	GrafanaAdminPassword    string    `json:"grafanaAdminPassword"`
	GrafanaAdminUser        string    `json:"grafanaAdminUser"`
	Plan                    PlanModel `json:"plan"`
	BucketRetentionTimeRaw  int32     `json:"bucketRetentionTimeRaw"`
	BucketRetentionTime5m   int32     `json:"bucketRetentionTime5m"`
	BucketRetentionTime1h   int32     `json:"bucketRetentionTime1h"`
	MetricsUrl              string    `json:"metricsUrl"`
	State                   *string   `json:"state,omitempty"`
	GrafanaPublicReadAccess bool      `json:"grafanaPublicReadAccess"`
	TargetsUrl              string    `json:"targetsUrl"`
	AlertingUrl             string    `json:"alertingUrl"`
}

// NewInstanceSensitiveData instantiates a new InstanceSensitiveData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceSensitiveData(cluster string, instance string, grafanaUrl string, dashboardUrl string, grafanaAdminPassword string, grafanaAdminUser string, plan PlanModel, bucketRetentionTimeRaw int32, bucketRetentionTime5m int32, bucketRetentionTime1h int32, metricsUrl string, grafanaPublicReadAccess bool, targetsUrl string, alertingUrl string) *InstanceSensitiveData {
	this := InstanceSensitiveData{}
	this.Cluster = cluster
	this.Instance = instance
	this.GrafanaUrl = grafanaUrl
	this.DashboardUrl = dashboardUrl
	this.GrafanaAdminPassword = grafanaAdminPassword
	this.GrafanaAdminUser = grafanaAdminUser
	this.Plan = plan
	this.BucketRetentionTimeRaw = bucketRetentionTimeRaw
	this.BucketRetentionTime5m = bucketRetentionTime5m
	this.BucketRetentionTime1h = bucketRetentionTime1h
	this.MetricsUrl = metricsUrl
	this.GrafanaPublicReadAccess = grafanaPublicReadAccess
	this.TargetsUrl = targetsUrl
	this.AlertingUrl = alertingUrl
	return &this
}

// NewInstanceSensitiveDataWithDefaults instantiates a new InstanceSensitiveData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceSensitiveDataWithDefaults() *InstanceSensitiveData {
	this := InstanceSensitiveData{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *InstanceSensitiveData) GetCluster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *InstanceSensitiveData) SetCluster(v string) {
	o.Cluster = v
}

// GetInstance returns the Instance field value
func (o *InstanceSensitiveData) GetInstance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetInstanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instance, true
}

// SetInstance sets field value
func (o *InstanceSensitiveData) SetInstance(v string) {
	o.Instance = v
}

// GetGrafanaUrl returns the GrafanaUrl field value
func (o *InstanceSensitiveData) GetGrafanaUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrafanaUrl
}

// GetGrafanaUrlOk returns a tuple with the GrafanaUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetGrafanaUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrafanaUrl, true
}

// SetGrafanaUrl sets field value
func (o *InstanceSensitiveData) SetGrafanaUrl(v string) {
	o.GrafanaUrl = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InstanceSensitiveData) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InstanceSensitiveData) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InstanceSensitiveData) SetName(v string) {
	o.Name = &v
}

// GetDashboardUrl returns the DashboardUrl field value
func (o *InstanceSensitiveData) GetDashboardUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DashboardUrl
}

// GetDashboardUrlOk returns a tuple with the DashboardUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetDashboardUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DashboardUrl, true
}

// SetDashboardUrl sets field value
func (o *InstanceSensitiveData) SetDashboardUrl(v string) {
	o.DashboardUrl = v
}

// GetGrafanaAdminPassword returns the GrafanaAdminPassword field value
func (o *InstanceSensitiveData) GetGrafanaAdminPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrafanaAdminPassword
}

// GetGrafanaAdminPasswordOk returns a tuple with the GrafanaAdminPassword field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetGrafanaAdminPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrafanaAdminPassword, true
}

// SetGrafanaAdminPassword sets field value
func (o *InstanceSensitiveData) SetGrafanaAdminPassword(v string) {
	o.GrafanaAdminPassword = v
}

// GetGrafanaAdminUser returns the GrafanaAdminUser field value
func (o *InstanceSensitiveData) GetGrafanaAdminUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrafanaAdminUser
}

// GetGrafanaAdminUserOk returns a tuple with the GrafanaAdminUser field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetGrafanaAdminUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrafanaAdminUser, true
}

// SetGrafanaAdminUser sets field value
func (o *InstanceSensitiveData) SetGrafanaAdminUser(v string) {
	o.GrafanaAdminUser = v
}

// GetPlan returns the Plan field value
func (o *InstanceSensitiveData) GetPlan() PlanModel {
	if o == nil {
		var ret PlanModel
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetPlanOk() (*PlanModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plan, true
}

// SetPlan sets field value
func (o *InstanceSensitiveData) SetPlan(v PlanModel) {
	o.Plan = v
}

// GetBucketRetentionTimeRaw returns the BucketRetentionTimeRaw field value
func (o *InstanceSensitiveData) GetBucketRetentionTimeRaw() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BucketRetentionTimeRaw
}

// GetBucketRetentionTimeRawOk returns a tuple with the BucketRetentionTimeRaw field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetBucketRetentionTimeRawOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketRetentionTimeRaw, true
}

// SetBucketRetentionTimeRaw sets field value
func (o *InstanceSensitiveData) SetBucketRetentionTimeRaw(v int32) {
	o.BucketRetentionTimeRaw = v
}

// GetBucketRetentionTime5m returns the BucketRetentionTime5m field value
func (o *InstanceSensitiveData) GetBucketRetentionTime5m() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BucketRetentionTime5m
}

// GetBucketRetentionTime5mOk returns a tuple with the BucketRetentionTime5m field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetBucketRetentionTime5mOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketRetentionTime5m, true
}

// SetBucketRetentionTime5m sets field value
func (o *InstanceSensitiveData) SetBucketRetentionTime5m(v int32) {
	o.BucketRetentionTime5m = v
}

// GetBucketRetentionTime1h returns the BucketRetentionTime1h field value
func (o *InstanceSensitiveData) GetBucketRetentionTime1h() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BucketRetentionTime1h
}

// GetBucketRetentionTime1hOk returns a tuple with the BucketRetentionTime1h field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetBucketRetentionTime1hOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketRetentionTime1h, true
}

// SetBucketRetentionTime1h sets field value
func (o *InstanceSensitiveData) SetBucketRetentionTime1h(v int32) {
	o.BucketRetentionTime1h = v
}

// GetMetricsUrl returns the MetricsUrl field value
func (o *InstanceSensitiveData) GetMetricsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricsUrl
}

// GetMetricsUrlOk returns a tuple with the MetricsUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetMetricsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricsUrl, true
}

// SetMetricsUrl sets field value
func (o *InstanceSensitiveData) SetMetricsUrl(v string) {
	o.MetricsUrl = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *InstanceSensitiveData) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *InstanceSensitiveData) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *InstanceSensitiveData) SetState(v string) {
	o.State = &v
}

// GetGrafanaPublicReadAccess returns the GrafanaPublicReadAccess field value
func (o *InstanceSensitiveData) GetGrafanaPublicReadAccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.GrafanaPublicReadAccess
}

// GetGrafanaPublicReadAccessOk returns a tuple with the GrafanaPublicReadAccess field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetGrafanaPublicReadAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrafanaPublicReadAccess, true
}

// SetGrafanaPublicReadAccess sets field value
func (o *InstanceSensitiveData) SetGrafanaPublicReadAccess(v bool) {
	o.GrafanaPublicReadAccess = v
}

// GetTargetsUrl returns the TargetsUrl field value
func (o *InstanceSensitiveData) GetTargetsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetsUrl
}

// GetTargetsUrlOk returns a tuple with the TargetsUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetTargetsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetsUrl, true
}

// SetTargetsUrl sets field value
func (o *InstanceSensitiveData) SetTargetsUrl(v string) {
	o.TargetsUrl = v
}

// GetAlertingUrl returns the AlertingUrl field value
func (o *InstanceSensitiveData) GetAlertingUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertingUrl
}

// GetAlertingUrlOk returns a tuple with the AlertingUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetAlertingUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertingUrl, true
}

// SetAlertingUrl sets field value
func (o *InstanceSensitiveData) SetAlertingUrl(v string) {
	o.AlertingUrl = v
}

func (o InstanceSensitiveData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cluster"] = o.Cluster
	}
	if true {
		toSerialize["instance"] = o.Instance
	}
	if true {
		toSerialize["grafanaUrl"] = o.GrafanaUrl
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["dashboardUrl"] = o.DashboardUrl
	}
	if true {
		toSerialize["grafanaAdminPassword"] = o.GrafanaAdminPassword
	}
	if true {
		toSerialize["grafanaAdminUser"] = o.GrafanaAdminUser
	}
	if true {
		toSerialize["plan"] = o.Plan
	}
	if true {
		toSerialize["bucketRetentionTimeRaw"] = o.BucketRetentionTimeRaw
	}
	if true {
		toSerialize["bucketRetentionTime5m"] = o.BucketRetentionTime5m
	}
	if true {
		toSerialize["bucketRetentionTime1h"] = o.BucketRetentionTime1h
	}
	if true {
		toSerialize["metricsUrl"] = o.MetricsUrl
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["grafanaPublicReadAccess"] = o.GrafanaPublicReadAccess
	}
	if true {
		toSerialize["targetsUrl"] = o.TargetsUrl
	}
	if true {
		toSerialize["alertingUrl"] = o.AlertingUrl
	}
	return json.Marshal(toSerialize)
}

type NullableInstanceSensitiveData struct {
	value *InstanceSensitiveData
	isSet bool
}

func (v NullableInstanceSensitiveData) Get() *InstanceSensitiveData {
	return v.value
}

func (v *NullableInstanceSensitiveData) Set(val *InstanceSensitiveData) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceSensitiveData) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceSensitiveData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceSensitiveData(val *InstanceSensitiveData) *NullableInstanceSensitiveData {
	return &NullableInstanceSensitiveData{value: val, isSet: true}
}

func (v NullableInstanceSensitiveData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceSensitiveData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
